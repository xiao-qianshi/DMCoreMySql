// <auto-generated />
using System;
using Dmt.DM.EntityFrameWork;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Dmt.DM.EntityFrameWork.Migrations
{
    [DbContext(typeof(HsDbContext))]
    [Migration("20200916180051_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Dmt.DM.Domain.Entity.JSReporting.DataReportJSEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("F_DownloadTime");

                    b.Property<string>("F_FileName")
                        .HasMaxLength(30);

                    b.Property<string>("F_FilePath")
                        .HasMaxLength(150);

                    b.Property<string>("F_FileSize")
                        .HasMaxLength(30);

                    b.Property<bool?>("F_HasDownload");

                    b.Property<bool>("F_IsCompleted");

                    b.Property<string>("F_MonthDesc")
                        .HasMaxLength(10);

                    b.Property<string>("F_PId")
                        .HasMaxLength(50);

                    b.HasKey("F_Id");

                    b.ToTable("Sys_DataReportJS");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.LabLis.BarcodeEntity", b =>
                {
                    b.Property<long>("sn")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Barcode");

                    b.Property<DateTime?>("BarcodeCreateTime");

                    b.Property<DateTime>("BarcodeDate");

                    b.Property<long>("F_Id");

                    b.Property<long?>("RequestId");

                    b.HasKey("sn");

                    b.ToTable("Sys_Barcode");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.LabLis.DATestReportEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<float?>("AGE");

                    b.Property<string>("AGEUNIT")
                        .HasMaxLength(10);

                    b.Property<string>("ANALYTE")
                        .HasMaxLength(100);

                    b.Property<string>("ANALYTE_ORIGREC")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("APPRDATE");

                    b.Property<string>("APPRVEDBY")
                        .HasMaxLength(20);

                    b.Property<string>("APPRVEDBYID")
                        .HasMaxLength(20);

                    b.Property<string>("BARCODE")
                        .HasMaxLength(20);

                    b.Property<string>("CLINICNAME")
                        .HasMaxLength(40);

                    b.Property<DateTime?>("COLLECTDDATE");

                    b.Property<string>("COMMENTS")
                        .HasMaxLength(500);

                    b.Property<string>("DEPT")
                        .HasMaxLength(50);

                    b.Property<string>("DIAGNOSIS")
                        .HasMaxLength(80);

                    b.Property<string>("DISPLOWHIGH")
                        .HasMaxLength(80);

                    b.Property<string>("DISPLOWHIGH_F")
                        .HasMaxLength(80);

                    b.Property<string>("DISPLOWHIGH_M")
                        .HasMaxLength(80);

                    b.Property<string>("DOCTOR")
                        .HasMaxLength(20);

                    b.Property<string>("DOCTORPHONE")
                        .HasMaxLength(20);

                    b.Property<string>("EQUIPMENT")
                        .HasMaxLength(40);

                    b.Property<string>("FINAL")
                        .HasMaxLength(40);

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<string>("GENE_MUTATIONS_RATIO")
                        .HasMaxLength(20);

                    b.Property<string>("HIGHB")
                        .HasMaxLength(20);

                    b.Property<string>("LONGTXT")
                        .HasMaxLength(500);

                    b.Property<string>("LOWB")
                        .HasMaxLength(20);

                    b.Property<string>("METHODNAME")
                        .HasMaxLength(40);

                    b.Property<string>("PATIENTCATEGORY")
                        .HasMaxLength(20);

                    b.Property<string>("PATIENTNAME")
                        .HasMaxLength(20);

                    b.Property<string>("PATIENTPHONE")
                        .HasMaxLength(20);

                    b.Property<string>("RANGE_DESC")
                        .HasMaxLength(500);

                    b.Property<string>("RANGE_FLG")
                        .HasMaxLength(6);

                    b.Property<string>("RN10")
                        .HasMaxLength(6);

                    b.Property<string>("RN20");

                    b.Property<string>("S")
                        .HasMaxLength(20);

                    b.Property<string>("SAMPLEFROM")
                        .HasMaxLength(50);

                    b.Property<string>("SAMPLESTATUS")
                        .HasMaxLength(40);

                    b.Property<string>("SAMPLETYPE")
                        .HasMaxLength(20);

                    b.Property<string>("SERVGRP")
                        .HasMaxLength(50);

                    b.Property<string>("SEX")
                        .HasMaxLength(10);

                    b.Property<string>("SHORTNAME")
                        .HasMaxLength(20);

                    b.Property<string>("SINONYM")
                        .HasMaxLength(50);

                    b.Property<int?>("SORTER");

                    b.Property<DateTime?>("SUBMITDATE");

                    b.Property<string>("SYNONIM_EN")
                        .HasMaxLength(80);

                    b.Property<string>("TESTCODE")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("TESTDATE");

                    b.Property<string>("UNITS")
                        .HasMaxLength(30);

                    b.Property<string>("USRNAM")
                        .HasMaxLength(20);

                    b.Property<string>("USRNAMID")
                        .HasMaxLength(20);

                    b.HasKey("F_Id");

                    b.ToTable("Sys_DATestReport");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.LabLis.LabDecodeEngineEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<string>("F_Alias")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_Desc")
                        .HasMaxLength(30);

                    b.Property<string>("F_HandleProcess")
                        .HasMaxLength(120);

                    b.Property<string>("F_Name")
                        .HasMaxLength(30);

                    b.HasKey("F_Id");

                    b.ToTable("Sys_LabDecodeEngine");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.LabLis.LabInstrumentEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<string>("F_Code")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("F_CommunicateConfig")
                        .HasMaxLength(2000);

                    b.Property<string>("F_CommunicateMode")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_DecodeEngine")
                        .HasMaxLength(30);

                    b.Property<bool?>("F_DeleteMark");

                    b.Property<DateTime?>("F_DeleteTime");

                    b.Property<string>("F_DeleteUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_EnabledMark");

                    b.Property<bool?>("F_IsDuplex");

                    b.Property<bool>("F_IsExternal");

                    b.Property<bool?>("F_IsRegistered");

                    b.Property<DateTime?>("F_LastModifyTime");

                    b.Property<string>("F_LastModifyUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_Memo")
                        .HasMaxLength(500);

                    b.Property<string>("F_Name")
                        .HasMaxLength(60);

                    b.Property<string>("F_PicPath")
                        .HasMaxLength(200);

                    b.Property<string>("F_RegistKey")
                        .HasMaxLength(200);

                    b.Property<string>("F_SerialNo")
                        .HasMaxLength(40);

                    b.Property<string>("F_ShortName")
                        .HasMaxLength(30);

                    b.Property<int?>("F_Sorter");

                    b.Property<string>("F_Supplier")
                        .HasMaxLength(60);

                    b.Property<string>("F_TestType")
                        .HasMaxLength(20);

                    b.Property<string>("F_WorkStationIp")
                        .HasMaxLength(30);

                    b.Property<int?>("F_WorkStationPort");

                    b.HasKey("F_Id");

                    b.ToTable("Sys_LabInstrument");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.LabLis.LabInstrumentItemEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<string>("F_ChannelValue");

                    b.Property<string>("F_CnName")
                        .HasMaxLength(60);

                    b.Property<string>("F_Code")
                        .HasMaxLength(20);

                    b.Property<float?>("F_ConvertCoefficient");

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<float?>("F_CriticalMaxValue");

                    b.Property<float?>("F_CriticalMinValue");

                    b.Property<float?>("F_DefaultValue");

                    b.Property<bool?>("F_DeleteMark");

                    b.Property<DateTime?>("F_DeleteTime");

                    b.Property<string>("F_DeleteUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_EnName")
                        .HasMaxLength(60);

                    b.Property<bool?>("F_EnabledMark");

                    b.Property<bool?>("F_IsQualityItem");

                    b.Property<int?>("F_KeepDecimal");

                    b.Property<DateTime?>("F_LastModifyTime");

                    b.Property<string>("F_LastModifyUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_MachineId")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("F_Name")
                        .HasMaxLength(60);

                    b.Property<string>("F_PY")
                        .HasMaxLength(20);

                    b.Property<string>("F_QualityItemId")
                        .HasMaxLength(50);

                    b.Property<string>("F_QualityItemName")
                        .HasMaxLength(30);

                    b.Property<float?>("F_ReferenceMaxValue");

                    b.Property<float?>("F_ReferenceMinValue");

                    b.Property<string>("F_ReferenceTextValue")
                        .HasMaxLength(100);

                    b.Property<bool?>("F_ResultType");

                    b.Property<int?>("F_Sorter");

                    b.Property<string>("F_ValueUnit")
                        .HasMaxLength(30);

                    b.Property<bool>("IsHiddenItem");

                    b.HasKey("F_Id");

                    b.ToTable("Sys_LabInstrumentItem");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.LabLis.LabItemEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<string>("F_Code")
                        .HasMaxLength(20);

                    b.Property<string>("F_Container")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<int>("F_CuvetteNo");

                    b.Property<bool?>("F_DeleteMark");

                    b.Property<DateTime?>("F_DeleteTime");

                    b.Property<string>("F_DeleteUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_EnName")
                        .HasMaxLength(40);

                    b.Property<bool?>("F_EnabledMark");

                    b.Property<bool>("F_IsExternal");

                    b.Property<bool?>("F_IsPeriodic");

                    b.Property<DateTime?>("F_LastModifyTime");

                    b.Property<string>("F_LastModifyUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_Memo")
                        .HasMaxLength(500);

                    b.Property<string>("F_Name")
                        .HasMaxLength(60);

                    b.Property<string>("F_PY")
                        .HasMaxLength(20);

                    b.Property<string>("F_SampleType")
                        .HasMaxLength(20);

                    b.Property<string>("F_ShortName")
                        .HasMaxLength(30);

                    b.Property<int?>("F_Sorter");

                    b.Property<string>("F_ThirdPartyCode")
                        .HasMaxLength(30);

                    b.Property<float?>("F_TimeInterval");

                    b.Property<string>("F_Type")
                        .HasMaxLength(20);

                    b.HasKey("F_Id");

                    b.ToTable("Sys_LabItem");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.LabLis.LabOriginalMessageEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<string>("F_Barcode")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_InstrumentId")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("F_MessageContent");

                    b.Property<DateTime>("F_TestDate");

                    b.Property<int>("F_TestNo");

                    b.HasKey("F_Id");

                    b.ToTable("Sys_LabOriginalMessage");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.LabLis.LabReportEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<string>("F_Code");

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_EnabledMark");

                    b.Property<string>("F_Flag")
                        .HasMaxLength(5);

                    b.Property<bool?>("F_IsCritical");

                    b.Property<string>("F_ItemId")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<float?>("F_LowRef");

                    b.Property<string>("F_MethodName")
                        .HasMaxLength(60);

                    b.Property<string>("F_Name")
                        .HasMaxLength(40);

                    b.Property<float?>("F_Result");

                    b.Property<string>("F_ResultText")
                        .HasMaxLength(200);

                    b.Property<string>("F_ShortName")
                        .HasMaxLength(20);

                    b.Property<int?>("F_Sorter");

                    b.Property<long>("F_TestId");

                    b.Property<string>("F_Unit")
                        .HasMaxLength(40);

                    b.Property<float?>("F_UpperRef");

                    b.HasKey("F_Id");

                    b.ToTable("Sys_LabReport");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.LabLis.LabSheetEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("F_AuditTime");

                    b.Property<string>("F_AuditUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_AuditUserName")
                        .HasMaxLength(20);

                    b.Property<string>("F_Barcode")
                        .HasMaxLength(20);

                    b.Property<bool?>("F_BeInfected");

                    b.Property<DateTime?>("F_BirthDay");

                    b.Property<DateTime?>("F_CheckTime");

                    b.Property<string>("F_CheckUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_CheckUserName")
                        .HasMaxLength(20);

                    b.Property<string>("F_Container")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_DeleteMark");

                    b.Property<DateTime?>("F_DeleteTime");

                    b.Property<string>("F_DeleteUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_Diagnosis")
                        .HasMaxLength(80);

                    b.Property<int?>("F_DialysisNo");

                    b.Property<string>("F_DoctorId")
                        .HasMaxLength(50);

                    b.Property<string>("F_DoctorName")
                        .HasMaxLength(20);

                    b.Property<bool?>("F_EnabledMark");

                    b.Property<string>("F_Gender")
                        .HasMaxLength(8);

                    b.Property<float?>("F_Height");

                    b.Property<string>("F_IdNo")
                        .HasMaxLength(20);

                    b.Property<float?>("F_IdealWeight");

                    b.Property<string>("F_InsuranceNo")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("F_LastModifyTime");

                    b.Property<string>("F_LastModifyUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_MaritalStatus")
                        .HasMaxLength(8);

                    b.Property<string>("F_Memo")
                        .HasMaxLength(200);

                    b.Property<string>("F_Name")
                        .HasMaxLength(20);

                    b.Property<string>("F_NurseId")
                        .HasMaxLength(50);

                    b.Property<string>("F_NurseName")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("F_OrderTime");

                    b.Property<string>("F_PatientNo")
                        .HasMaxLength(20);

                    b.Property<string>("F_Pid")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("F_PrimaryDisease")
                        .HasMaxLength(80);

                    b.Property<DateTime?>("F_PrintTime");

                    b.Property<string>("F_RecordNo")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("F_ReportTime");

                    b.Property<string>("F_ReportUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_ReportUserName")
                        .HasMaxLength(20);

                    b.Property<DateTime>("F_RequestDate");

                    b.Property<long>("F_RequestId");

                    b.Property<string>("F_SampleType")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("F_SamplingTime");

                    b.Property<int>("F_Status");

                    b.Property<DateTime?>("F_TestTime");

                    b.Property<string>("F_TestUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_TestUserName")
                        .HasMaxLength(20);

                    b.HasKey("F_Id");

                    b.ToTable("Sys_LabSheet");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.LabLis.LabSheetItemsEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<string>("F_Code")
                        .HasMaxLength(20);

                    b.Property<string>("F_Container")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<int>("F_CuvetteNo");

                    b.Property<bool?>("F_DeleteMark");

                    b.Property<DateTime?>("F_DeleteTime");

                    b.Property<string>("F_DeleteUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_EnName")
                        .HasMaxLength(40);

                    b.Property<bool?>("F_EnabledMark");

                    b.Property<bool>("F_IsExternal");

                    b.Property<bool?>("F_IsPeriodic");

                    b.Property<DateTime?>("F_LastModifyTime");

                    b.Property<string>("F_LastModifyUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_Name")
                        .HasMaxLength(60);

                    b.Property<DateTime>("F_RequestDate");

                    b.Property<long>("F_RequestId");

                    b.Property<string>("F_SampleType")
                        .HasMaxLength(20);

                    b.Property<string>("F_ShortName")
                        .HasMaxLength(20);

                    b.Property<int?>("F_Sorter");

                    b.Property<string>("F_ThirdPartyCode")
                        .HasMaxLength(30);

                    b.Property<float?>("F_TimeInterval");

                    b.Property<string>("F_Type")
                        .HasMaxLength(20);

                    b.HasKey("F_Id");

                    b.ToTable("Sys_LabSheetItems");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.LabLis.LabTestDuplexItemEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_ItemCode");

                    b.Property<long>("F_TestId");

                    b.Property<string>("F_TestMode");

                    b.HasKey("F_Id");

                    b.ToTable("Sys_LabTestDuplexItem");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.LabLis.LabTestEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<string>("F_AuditPerson")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("F_AuditTime");

                    b.Property<string>("F_Barcode")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_DeleteMark");

                    b.Property<DateTime?>("F_DeleteTime");

                    b.Property<string>("F_DeleteUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_EnabledMark");

                    b.Property<string>("F_InstrumentId")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("F_LastModifyTime");

                    b.Property<string>("F_LastModifyUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_PatientId")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("F_RecieveResultTime");

                    b.Property<long>("F_RequestId");

                    b.Property<string>("F_SampleType")
                        .HasMaxLength(20);

                    b.Property<string>("F_SignInPerson")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("F_SignInTime");

                    b.Property<int>("F_Status");

                    b.Property<DateTime>("F_TestDate");

                    b.Property<long>("F_TestId");

                    b.Property<int>("F_TestNo");

                    b.Property<string>("F_TestPerson")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("F_TestTime");

                    b.HasKey("F_Id");

                    b.ToTable("Sys_LabTest");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.LabLis.TestSampleNoEntity", b =>
                {
                    b.Property<long>("sn")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("CreateTime");

                    b.Property<long>("F_Id");

                    b.Property<string>("InstrumentId")
                        .IsRequired();

                    b.Property<int>("SampleNo");

                    b.Property<DateTime>("TestDate");

                    b.HasKey("sn");

                    b.ToTable("Sys_TestSampleNo");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.MachineManage.MachineDisinfectionEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<string>("F_CheckPerson")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_DeleteMark");

                    b.Property<DateTime?>("F_DeleteTime");

                    b.Property<string>("F_DeleteUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_DialylisBedNo")
                        .HasMaxLength(10);

                    b.Property<bool?>("F_EnabledMark");

                    b.Property<DateTime?>("F_EndTime");

                    b.Property<string>("F_GroupName")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("F_LastModifyTime");

                    b.Property<string>("F_LastModifyUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_MachineName")
                        .HasMaxLength(20);

                    b.Property<string>("F_MachineNo")
                        .HasMaxLength(20);

                    b.Property<string>("F_Memo")
                        .HasMaxLength(200);

                    b.Property<string>("F_Mid")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("F_OperatePerson")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_Option1");

                    b.Property<string>("F_Option1Value")
                        .HasMaxLength(80);

                    b.Property<bool?>("F_Option2");

                    b.Property<string>("F_Option2Value")
                        .HasMaxLength(80);

                    b.Property<bool?>("F_Option3");

                    b.Property<bool?>("F_Option4");

                    b.Property<bool?>("F_Option5");

                    b.Property<bool?>("F_Option6");

                    b.Property<string>("F_Option6Value")
                        .HasMaxLength(80);

                    b.Property<string>("F_PGender")
                        .HasMaxLength(10);

                    b.Property<string>("F_PName")
                        .HasMaxLength(20);

                    b.Property<string>("F_Pid")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int?>("F_ShowOrder");

                    b.Property<DateTime?>("F_StartTime");

                    b.Property<string>("F_Vid")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("F_VisitDate");

                    b.Property<int?>("F_VisitNo");

                    b.Property<DateTime?>("F_WipeEndTime");

                    b.Property<DateTime?>("F_WipeStartTime");

                    b.HasKey("F_Id");

                    b.ToTable("Sys_MachineDisinfection");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.MachineManage.MachineProcessEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_DeleteMark");

                    b.Property<DateTime?>("F_DeleteTime");

                    b.Property<string>("F_DeleteUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_DialylisBedNo")
                        .HasMaxLength(10);

                    b.Property<int?>("F_DialylisNo");

                    b.Property<bool?>("F_EnabledMark");

                    b.Property<string>("F_GroupName")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("F_LastModifyTime");

                    b.Property<string>("F_LastModifyUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_MachineName")
                        .HasMaxLength(20);

                    b.Property<string>("F_MachineNo")
                        .HasMaxLength(20);

                    b.Property<string>("F_Memo")
                        .HasMaxLength(200);

                    b.Property<string>("F_Mid")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("F_OperatePerson")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("F_OperateTime");

                    b.Property<bool?>("F_Option1");

                    b.Property<bool?>("F_Option2");

                    b.Property<bool?>("F_Option3");

                    b.Property<bool?>("F_Option4");

                    b.Property<string>("F_Option5");

                    b.Property<string>("F_Option6");

                    b.Property<string>("F_PGender")
                        .HasMaxLength(10);

                    b.Property<string>("F_PName")
                        .HasMaxLength(20);

                    b.Property<string>("F_Pid")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int?>("F_ShowOrder");

                    b.Property<string>("F_Vid")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("F_VisitDate");

                    b.Property<int?>("F_VisitNo");

                    b.HasKey("F_Id");

                    b.ToTable("Sys_MachineProcess");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.MachineManage.WaterMBriefEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<string>("F_CheckPerson")
                        .HasMaxLength(50);

                    b.Property<string>("F_CheckPersonName")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_EnabledMark");

                    b.Property<string>("F_Memo")
                        .HasMaxLength(200);

                    b.Property<string>("F_OperatePerson")
                        .HasMaxLength(50);

                    b.Property<string>("F_OperatePersonName")
                        .HasMaxLength(30);

                    b.Property<DateTime>("F_RecordDate");

                    b.Property<string>("F_Value1")
                        .HasMaxLength(20);

                    b.Property<string>("F_Value10")
                        .HasMaxLength(20);

                    b.Property<string>("F_Value11")
                        .HasMaxLength(20);

                    b.Property<string>("F_Value12")
                        .HasMaxLength(20);

                    b.Property<string>("F_Value13")
                        .HasMaxLength(20);

                    b.Property<string>("F_Value14")
                        .HasMaxLength(20);

                    b.Property<bool?>("F_Value15");

                    b.Property<bool?>("F_Value16");

                    b.Property<bool?>("F_Value17");

                    b.Property<bool?>("F_Value18");

                    b.Property<string>("F_Value2")
                        .HasMaxLength(20);

                    b.Property<string>("F_Value3")
                        .HasMaxLength(20);

                    b.Property<string>("F_Value4")
                        .HasMaxLength(20);

                    b.Property<string>("F_Value5")
                        .HasMaxLength(20);

                    b.Property<string>("F_Value6")
                        .HasMaxLength(20);

                    b.Property<string>("F_Value7")
                        .HasMaxLength(20);

                    b.Property<string>("F_Value8")
                        .HasMaxLength(20);

                    b.Property<string>("F_Value9")
                        .HasMaxLength(20);

                    b.HasKey("F_Id");

                    b.ToTable("Sys_WaterMBrief");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.MachineManage.WaterMDisinfectEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<string>("F_CheckPerson")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_DeleteMark");

                    b.Property<DateTime?>("F_DeleteTime");

                    b.Property<string>("F_DeleteUserId")
                        .HasMaxLength(50);

                    b.Property<DateTime>("F_DisinfectDate");

                    b.Property<string>("F_DisinfectType")
                        .HasMaxLength(60);

                    b.Property<string>("F_DisinfectantName")
                        .HasMaxLength(60);

                    b.Property<string>("F_DisinfectantUnit")
                        .HasMaxLength(20);

                    b.Property<float?>("F_DisinfectantVolume");

                    b.Property<bool?>("F_EnabledMark");

                    b.Property<DateTime?>("F_LastModifyTime");

                    b.Property<string>("F_LastModifyUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_OperatePerson")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_Option1");

                    b.Property<bool?>("F_Option2");

                    b.Property<bool?>("F_Option3");

                    b.Property<DateTime?>("F_RecyclingEndTime");

                    b.Property<float?>("F_RecyclingMinutes");

                    b.Property<DateTime?>("F_RecyclingStartTime");

                    b.Property<DateTime?>("F_RinseEndTime");

                    b.Property<float?>("F_RinseMinutes");

                    b.Property<DateTime?>("F_RinseStartTime");

                    b.Property<DateTime?>("F_SoakEndTime");

                    b.Property<float?>("F_SoakMinutes");

                    b.Property<DateTime?>("F_SoakStartTime");

                    b.HasKey("F_Id");

                    b.ToTable("Sys_WaterMDisinfect");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.MachineManage.WaterMLogEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<string>("F_CheckPerson")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_DeleteMark");

                    b.Property<DateTime?>("F_DeleteTime");

                    b.Property<string>("F_DeleteUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_EnabledMark");

                    b.Property<DateTime?>("F_LastModifyTime");

                    b.Property<string>("F_LastModifyUserId")
                        .HasMaxLength(50);

                    b.Property<DateTime>("F_LogDate");

                    b.Property<string>("F_Memo")
                        .HasMaxLength(200);

                    b.Property<string>("F_OperatePerson")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_Option1");

                    b.Property<bool?>("F_Option2");

                    b.Property<bool?>("F_Option3");

                    b.Property<bool?>("F_Option4");

                    b.Property<bool?>("F_Option5");

                    b.Property<bool?>("F_Option6");

                    b.Property<float?>("F_Value1");

                    b.Property<float?>("F_Value2");

                    b.Property<float?>("F_Value3");

                    b.Property<float?>("F_Value4");

                    b.Property<float?>("F_Value5");

                    b.Property<float?>("F_Value6");

                    b.Property<float?>("F_Value7");

                    b.Property<float?>("F_Value8");

                    b.Property<float?>("F_Value9");

                    b.HasKey("F_Id");

                    b.ToTable("Sys_WaterMLog");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.MachineManage.WaterMObservationEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<string>("F_CheckPerson")
                        .HasMaxLength(50);

                    b.Property<string>("F_CheckPersonName")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_EnabledMark");

                    b.Property<string>("F_Memo")
                        .HasMaxLength(200);

                    b.Property<string>("F_OperatePerson")
                        .HasMaxLength(50);

                    b.Property<string>("F_OperatePersonName")
                        .HasMaxLength(30);

                    b.Property<DateTime>("F_RecordDate");

                    b.Property<string>("F_Value1")
                        .HasMaxLength(20);

                    b.Property<string>("F_Value10")
                        .HasMaxLength(20);

                    b.Property<bool?>("F_Value11");

                    b.Property<string>("F_Value12")
                        .HasMaxLength(20);

                    b.Property<string>("F_Value13")
                        .HasMaxLength(20);

                    b.Property<bool?>("F_Value14");

                    b.Property<string>("F_Value2")
                        .HasMaxLength(20);

                    b.Property<string>("F_Value3")
                        .HasMaxLength(20);

                    b.Property<string>("F_Value4")
                        .HasMaxLength(20);

                    b.Property<string>("F_Value5")
                        .HasMaxLength(20);

                    b.Property<string>("F_Value6")
                        .HasMaxLength(20);

                    b.Property<string>("F_Value7")
                        .HasMaxLength(20);

                    b.Property<string>("F_Value8")
                        .HasMaxLength(20);

                    b.Property<string>("F_Value9")
                        .HasMaxLength(20);

                    b.HasKey("F_Id");

                    b.ToTable("Sys_WaterMObservation");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.PatientManage.BillingEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<float?>("F_Amount");

                    b.Property<DateTime>("F_BillingDateTime");

                    b.Property<string>("F_BillingPerson");

                    b.Property<string>("F_BillingPersonId");

                    b.Property<float?>("F_Charges");

                    b.Property<float?>("F_Costs");

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_DeleteMark");

                    b.Property<DateTime?>("F_DeleteTime");

                    b.Property<string>("F_DeleteUserId")
                        .HasMaxLength(50);

                    b.Property<int>("F_DialylisNo");

                    b.Property<string>("F_DisabledPerson")
                        .HasMaxLength(20);

                    b.Property<bool?>("F_EnabledMark");

                    b.Property<bool?>("F_IsAcct");

                    b.Property<string>("F_ItemClass")
                        .HasMaxLength(15);

                    b.Property<string>("F_ItemCode")
                        .HasMaxLength(15);

                    b.Property<string>("F_ItemId")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("F_ItemName")
                        .HasMaxLength(40);

                    b.Property<string>("F_ItemSpec")
                        .HasMaxLength(30);

                    b.Property<string>("F_ItemSpell")
                        .HasMaxLength(15);

                    b.Property<string>("F_ItemUnit")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("F_LastModifyTime");

                    b.Property<string>("F_LastModifyUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_PGender")
                        .HasMaxLength(10);

                    b.Property<string>("F_PName")
                        .HasMaxLength(20);

                    b.Property<string>("F_Pid")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("F_Supplier")
                        .HasMaxLength(60);

                    b.HasKey("F_Id");

                    b.ToTable("Sys_Billing");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.PatientManage.BillingModelEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<float?>("F_Amount");

                    b.Property<float?>("F_Charges");

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_DeleteMark");

                    b.Property<DateTime?>("F_DeleteTime");

                    b.Property<string>("F_DeleteUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_DialysisType")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<bool?>("F_EnabledMark");

                    b.Property<string>("F_ItemClass")
                        .HasMaxLength(15);

                    b.Property<string>("F_ItemCode")
                        .HasMaxLength(15);

                    b.Property<string>("F_ItemId")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("F_ItemName")
                        .HasMaxLength(40);

                    b.Property<string>("F_ItemSpec")
                        .HasMaxLength(30);

                    b.Property<string>("F_ItemUnit")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("F_LastModifyTime");

                    b.Property<string>("F_LastModifyUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_Supplier")
                        .HasMaxLength(60);

                    b.Property<string>("F_VascularAccess")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("F_Id");

                    b.ToTable("Sys_BillingModel");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.PatientManage.BookEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<string>("F_BookName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_DeleteMark");

                    b.Property<DateTime?>("F_DeleteTime");

                    b.Property<string>("F_DeleteUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_EnabledMark");

                    b.Property<string>("F_FileIndex")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("F_FilePath")
                        .HasMaxLength(200);

                    b.Property<string>("F_FileSize")
                        .HasMaxLength(30);

                    b.Property<string>("F_FileType")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("F_LastModifyTime");

                    b.Property<string>("F_LastModifyUserId")
                        .HasMaxLength(50);

                    b.Property<DateTime>("F_UploadDate");

                    b.Property<string>("F_UploadPerson")
                        .HasMaxLength(20);

                    b.HasKey("F_Id");

                    b.ToTable("Sys_Book");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.PatientManage.ConclusionTemplateEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<string>("F_Content")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_DeleteMark");

                    b.Property<DateTime?>("F_DeleteTime");

                    b.Property<string>("F_DeleteUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_EnabledMark");

                    b.Property<bool?>("F_IsPrivate");

                    b.Property<DateTime?>("F_LastModifyTime");

                    b.Property<string>("F_LastModifyUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_Title")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("F_Id");

                    b.ToTable("Sys_ConclusionTemplate");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.PatientManage.CriticalValueEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("F_BirthDay");

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_DeleteMark");

                    b.Property<DateTime?>("F_DeleteTime");

                    b.Property<string>("F_DeleteUserId")
                        .HasMaxLength(50);

                    b.Property<int>("F_DialysisNo");

                    b.Property<bool?>("F_EnabledMark");

                    b.Property<string>("F_Gender")
                        .HasMaxLength(8);

                    b.Property<string>("F_HisItemCode")
                        .HasMaxLength(20);

                    b.Property<string>("F_IdNo")
                        .HasMaxLength(20);

                    b.Property<string>("F_ItemCode")
                        .HasMaxLength(20);

                    b.Property<string>("F_ItemId")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("F_ItemName")
                        .HasMaxLength(50);

                    b.Property<string>("F_ItemType")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("F_LastModifyTime");

                    b.Property<string>("F_LastModifyUserId")
                        .HasMaxLength(50);

                    b.Property<float?>("F_LowerCriticalValue");

                    b.Property<float?>("F_LowerValue");

                    b.Property<string>("F_Memo")
                        .HasMaxLength(200);

                    b.Property<string>("F_Name")
                        .HasMaxLength(20);

                    b.Property<string>("F_PatientNo")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("F_Pid")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("F_RecordNo")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<DateTime?>("F_ReportTime");

                    b.Property<string>("F_Result")
                        .HasMaxLength(20);

                    b.Property<bool?>("F_ResultType");

                    b.Property<string>("F_Unit")
                        .HasMaxLength(20);

                    b.Property<float?>("F_UpperCriticalValue");

                    b.Property<float?>("F_UpperValue");

                    b.HasKey("F_Id");

                    b.ToTable("Sys_CriticalValue");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.PatientManage.DialysisMachineEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_DefaultType")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<bool?>("F_DeleteMark");

                    b.Property<DateTime?>("F_DeleteTime");

                    b.Property<string>("F_DeleteUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_DialylisBedNo")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<bool?>("F_EnabledMark");

                    b.Property<string>("F_GroupName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<DateTime?>("F_LastModifyTime");

                    b.Property<string>("F_LastModifyUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_MachineName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("F_MachineNo")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int?>("F_ShowOrder")
                        .IsRequired();

                    b.HasKey("F_Id");

                    b.ToTable("Sys_DialysisMachine");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.PatientManage.DialysisObservationEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<float?>("F_A");

                    b.Property<float?>("F_BF");

                    b.Property<float?>("F_C");

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_DeleteMark");

                    b.Property<DateTime?>("F_DeleteTime");

                    b.Property<string>("F_DeleteUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_EnabledMark");

                    b.Property<float?>("F_GSL");

                    b.Property<float?>("F_HR");

                    b.Property<DateTime?>("F_LastModifyTime");

                    b.Property<string>("F_LastModifyUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_MEMO")
                        .HasMaxLength(200);

                    b.Property<string>("F_Nurse")
                        .HasMaxLength(50);

                    b.Property<string>("F_NurseName")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("F_NurseOperatorTime");

                    b.Property<string>("F_Pid")
                        .HasMaxLength(50);

                    b.Property<float?>("F_SSY");

                    b.Property<float?>("F_SZY");

                    b.Property<float?>("F_T");

                    b.Property<float?>("F_TMP");

                    b.Property<float?>("F_UFR");

                    b.Property<float?>("F_UFV");

                    b.Property<float?>("F_V");

                    b.Property<DateTime?>("F_VisitDate");

                    b.Property<int?>("F_VisitNo");

                    b.HasKey("F_Id");

                    b.ToTable("Sys_DialysisObservation");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.PatientManage.DialysisScheduleEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<string>("F_BId")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_DeleteMark");

                    b.Property<DateTime?>("F_DeleteTime");

                    b.Property<string>("F_DeleteUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_DialysisBedNo")
                        .HasMaxLength(10);

                    b.Property<int?>("F_DialysisNo");

                    b.Property<string>("F_DialysisType")
                        .HasMaxLength(20);

                    b.Property<bool?>("F_EnabledMark");

                    b.Property<string>("F_GroupName")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("F_LastModifyTime");

                    b.Property<string>("F_LastModifyUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_Name")
                        .HasMaxLength(20);

                    b.Property<string>("F_PId")
                        .HasMaxLength(50);

                    b.Property<int?>("F_Sort");

                    b.Property<DateTime?>("F_VisitDate");

                    b.Property<int?>("F_VisitNo");

                    b.HasKey("F_Id");

                    b.ToTable("Sys_DialysisSchedule");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.PatientManage.DoseGuideEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_DeleteMark");

                    b.Property<DateTime?>("F_DeleteTime");

                    b.Property<string>("F_DeleteUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_DrugEnName")
                        .HasMaxLength(100);

                    b.Property<string>("F_DrugId")
                        .HasMaxLength(50);

                    b.Property<string>("F_DrugName")
                        .HasMaxLength(100);

                    b.Property<bool?>("F_EnabledMark");

                    b.Property<DateTime?>("F_LastModifyTime");

                    b.Property<string>("F_LastModifyUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_Method")
                        .HasMaxLength(20);

                    b.Property<string>("F_Py")
                        .HasMaxLength(100);

                    b.Property<string>("F_Range1")
                        .HasMaxLength(60);

                    b.Property<string>("F_Range2")
                        .HasMaxLength(60);

                    b.Property<string>("F_Range3")
                        .HasMaxLength(60);

                    b.Property<string>("F_Range4")
                        .HasMaxLength(60);

                    b.Property<string>("F_Symptom1")
                        .HasMaxLength(80);

                    b.Property<string>("F_Symptom2")
                        .HasMaxLength(80);

                    b.Property<string>("F_Symptom3")
                        .HasMaxLength(80);

                    b.Property<string>("F_Symptom4")
                        .HasMaxLength(80);

                    b.HasKey("F_Id");

                    b.ToTable("Sys_DoseGuide");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.PatientManage.DrugsEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<float?>("F_Charges");

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_DeleteMark");

                    b.Property<DateTime?>("F_DeleteTime");

                    b.Property<string>("F_DeleteUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_DrugAdministration")
                        .HasMaxLength(20);

                    b.Property<string>("F_DrugCode")
                        .HasMaxLength(15);

                    b.Property<string>("F_DrugEfficacy")
                        .HasMaxLength(200);

                    b.Property<float?>("F_DrugMiniAmount");

                    b.Property<int?>("F_DrugMiniPackage");

                    b.Property<string>("F_DrugMiniSpec")
                        .HasMaxLength(20);

                    b.Property<string>("F_DrugName")
                        .HasMaxLength(40);

                    b.Property<string>("F_DrugSpec")
                        .HasMaxLength(30);

                    b.Property<string>("F_DrugSpell")
                        .HasMaxLength(15);

                    b.Property<string>("F_DrugSupplier")
                        .HasMaxLength(60);

                    b.Property<string>("F_DrugUnit")
                        .HasMaxLength(20);

                    b.Property<bool?>("F_EnabledMark");

                    b.Property<bool?>("F_IsHeparin");

                    b.Property<DateTime?>("F_LastModifyTime");

                    b.Property<string>("F_LastModifyUserId")
                        .HasMaxLength(50);

                    b.HasKey("F_Id");

                    b.ToTable("Sys_Drugs");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.PatientManage.EvaluationEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<string>("Checknurse")
                        .HasMaxLength(50);

                    b.Property<string>("Checkperson")
                        .HasMaxLength(50);

                    b.Property<bool?>("Cx1");

                    b.Property<bool?>("Cx2");

                    b.Property<string>("Cxvalue1")
                        .HasMaxLength(150);

                    b.Property<bool?>("Dd1");

                    b.Property<bool?>("Dd2");

                    b.Property<string>("Ddvalue1")
                        .HasMaxLength(150);

                    b.Property<bool?>("Dgll1");

                    b.Property<bool?>("Dgll2");

                    b.Property<bool?>("Dgll3");

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_DeleteMark");

                    b.Property<DateTime?>("F_DeleteTime");

                    b.Property<string>("F_DeleteUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_EnabledMark");

                    b.Property<DateTime?>("F_LastModifyTime");

                    b.Property<string>("F_LastModifyUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_Pid")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("F_VisitDate");

                    b.Property<bool?>("Hx1");

                    b.Property<bool?>("Hx2");

                    b.Property<bool?>("Hx3");

                    b.Property<bool?>("Hx4");

                    b.Property<bool?>("Hx5");

                    b.Property<bool?>("Hx6");

                    b.Property<bool?>("Hy1");

                    b.Property<bool?>("Hy2");

                    b.Property<bool?>("Jkjyfs1");

                    b.Property<bool?>("Jkjyfs2");

                    b.Property<bool?>("Jkjyfs3");

                    b.Property<bool?>("Jkjyfs4");

                    b.Property<bool?>("Nl1");

                    b.Property<bool?>("Nl2");

                    b.Property<bool?>("Nlccdqk1");

                    b.Property<bool?>("Nlccdqk2");

                    b.Property<bool?>("Nlccdqk3");

                    b.Property<bool?>("Nlccdqk4");

                    b.Property<bool?>("Nlccdqk5");

                    b.Property<bool?>("Nlccdqk6");

                    b.Property<bool?>("Nlccdqk7");

                    b.Property<bool?>("Nlcsxl1");

                    b.Property<bool?>("Nlcsxl2");

                    b.Property<string>("Nlcsxlvalue1")
                        .HasMaxLength(150);

                    b.Property<bool?>("Nlsynx1");

                    b.Property<bool?>("Nlsynx2");

                    b.Property<bool?>("Nlsynx3");

                    b.Property<bool?>("Nlsynx4");

                    b.Property<string>("Nlvalue1")
                        .HasMaxLength(150);

                    b.Property<bool?>("Place1");

                    b.Property<bool?>("Place2");

                    b.Property<string>("Placevalue1")
                        .HasMaxLength(150);

                    b.Property<string>("Placevalue2")
                        .HasMaxLength(150);

                    b.Property<bool?>("Qctxhqk1");

                    b.Property<bool?>("Qctxhqk2");

                    b.Property<bool?>("Qctxhqk3");

                    b.Property<bool?>("Qctxhqk4");

                    b.Property<bool?>("Qctxhqk5");

                    b.Property<bool?>("Qctxhqk6");

                    b.Property<string>("Qctxhqkvalue1")
                        .HasMaxLength(150);

                    b.Property<bool?>("Rsfs1");

                    b.Property<bool?>("Rsfs2");

                    b.Property<bool?>("Rsfs3");

                    b.Property<bool?>("Sctxcczz1");

                    b.Property<bool?>("Sctxcczz2");

                    b.Property<bool?>("Sctxcczz3");

                    b.Property<bool?>("Sctxcczz4");

                    b.Property<bool?>("Sctxcczz5");

                    b.Property<DateTime?>("Sctxdate");

                    b.Property<bool?>("Sfsctx1");

                    b.Property<bool?>("Sfsctx2");

                    b.Property<string>("Sfsctxvalue1")
                        .HasMaxLength(150);

                    b.Property<string>("Sfsctxvalue2")
                        .HasMaxLength(150);

                    b.Property<string>("Sfsctxvalue3")
                        .HasMaxLength(150);

                    b.Property<bool?>("Shzlnl1");

                    b.Property<bool?>("Shzlnl2");

                    b.Property<bool?>("Shzlnl3");

                    b.Property<bool?>("Sjz1");

                    b.Property<bool?>("Sjz2");

                    b.Property<string>("Sjzvalue1")
                        .HasMaxLength(150);

                    b.Property<bool?>("Skwg1");

                    b.Property<bool?>("Skwg2");

                    b.Property<bool?>("Skwg3");

                    b.Property<bool?>("Skwg4");

                    b.Property<bool?>("Skwg5");

                    b.Property<bool?>("Skwg6");

                    b.Property<string>("Skwgvalue1")
                        .HasMaxLength(150);

                    b.Property<bool?>("Sm1");

                    b.Property<bool?>("Sm2");

                    b.Property<bool?>("Sm3");

                    b.Property<bool?>("Sy1");

                    b.Property<bool?>("Sy2");

                    b.Property<bool?>("Sy3");

                    b.Property<bool?>("Tl1");

                    b.Property<bool?>("Tl2");

                    b.Property<bool?>("Tl3");

                    b.Property<bool?>("Tsqk1");

                    b.Property<bool?>("Tsqk2");

                    b.Property<bool?>("Tsqk3");

                    b.Property<bool?>("Tsqk4");

                    b.Property<string>("Tsqkvalue1")
                        .HasMaxLength(150);

                    b.Property<string>("Tsqkvalue2")
                        .HasMaxLength(150);

                    b.Property<bool?>("Tw1");

                    b.Property<bool?>("Tw2");

                    b.Property<bool?>("Tw3");

                    b.Property<string>("Twvalue1")
                        .HasMaxLength(150);

                    b.Property<bool?>("Tzgl1");

                    b.Property<bool?>("Tzgl2");

                    b.Property<bool?>("Tzgl3");

                    b.Property<bool?>("Ww1");

                    b.Property<bool?>("Ww2");

                    b.Property<bool?>("Ww3");

                    b.Property<string>("Wytxcfvalue1")
                        .HasMaxLength(150);

                    b.Property<string>("Wytxcfvalue2")
                        .HasMaxLength(150);

                    b.Property<string>("Wytxcfvalue3")
                        .HasMaxLength(150);

                    b.Property<bool?>("Wytxywbs1");

                    b.Property<bool?>("Wytxywbs2");

                    b.Property<bool?>("Wz1");

                    b.Property<bool?>("Wz2");

                    b.Property<bool?>("Wz3");

                    b.Property<bool?>("Wz4");

                    b.Property<string>("Wzvalue1")
                        .HasMaxLength(150);

                    b.Property<bool?>("Xgtlzd1");

                    b.Property<bool?>("Xgtlzd2");

                    b.Property<bool?>("Xgtlzd3");

                    b.Property<bool?>("Xgtlzd4");

                    b.Property<bool?>("Xgzy1");

                    b.Property<bool?>("Xgzy2");

                    b.Property<bool?>("Xgzy3");

                    b.Property<bool?>("Xl1");

                    b.Property<bool?>("Xl2");

                    b.Property<bool?>("Xl3");

                    b.Property<bool?>("Xl4");

                    b.Property<string>("Xlvalue1")
                        .HasMaxLength(150);

                    b.Property<string>("Xlvalue2")
                        .HasMaxLength(150);

                    b.Property<bool?>("Xy1");

                    b.Property<bool?>("Xy2");

                    b.Property<bool?>("Xy3");

                    b.Property<bool?>("Xy4");

                    b.Property<string>("Xyvalue1")
                        .HasMaxLength(150);

                    b.Property<string>("Xyvalue2")
                        .HasMaxLength(150);

                    b.Property<bool?>("Ydzd1");

                    b.Property<bool?>("Ydzd2");

                    b.Property<bool?>("Ydzd3");

                    b.Property<bool?>("Yslkz1");

                    b.Property<bool?>("Yslkz2");

                    b.Property<bool?>("Yslkz3");

                    b.Property<bool?>("Yszd1");

                    b.Property<bool?>("Yszd2");

                    b.Property<bool?>("Yszd3");

                    b.Property<bool?>("Yszd4");

                    b.Property<bool?>("Yszd5");

                    b.Property<bool?>("Ywfr1");

                    b.Property<bool?>("Ywfr2");

                    b.Property<string>("Ywfrvalue1")
                        .HasMaxLength(150);

                    b.Property<bool?>("Yyqk1");

                    b.Property<bool?>("Yyqk2");

                    b.Property<bool?>("Yyqk3");

                    b.Property<bool?>("Yyqk4");

                    b.Property<string>("Yyqkvalue1")
                        .HasMaxLength(150);

                    b.HasKey("F_Id");

                    b.ToTable("Sys_Evaluation");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.PatientManage.FileIndexEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<string>("F_CardNo");

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<int?>("F_DialysisNo");

                    b.Property<string>("F_FileType");

                    b.Property<string>("F_Gender");

                    b.Property<DateTime?>("F_LastModifyTime");

                    b.Property<string>("F_Name");

                    b.Property<string>("F_PatientNo");

                    b.Property<string>("F_Pid")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("F_RealName")
                        .HasMaxLength(50);

                    b.Property<string>("F_RecordNo");

                    b.HasKey("F_Id");

                    b.ToTable("Sys_FileIndex");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.PatientManage.IdeaWeightEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_DeleteMark");

                    b.Property<DateTime?>("F_DeleteTime");

                    b.Property<string>("F_DeleteUserId")
                        .HasMaxLength(50);

                    b.Property<int>("F_DialysisNo");

                    b.Property<bool?>("F_EnabledMark");

                    b.Property<float?>("F_IdealWeight");

                    b.Property<DateTime?>("F_LastModifyTime");

                    b.Property<string>("F_LastModifyUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_Name")
                        .HasMaxLength(20);

                    b.Property<float?>("F_OldIdealWeight");

                    b.Property<string>("F_Pid")
                        .HasMaxLength(50);

                    b.HasKey("F_Id");

                    b.ToTable("Sys_IdeaWeight");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.PatientManage.ImportDetailEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<int?>("F_Amount");

                    b.Property<float?>("F_Charges");

                    b.Property<string>("F_Code")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_DeleteMark");

                    b.Property<DateTime?>("F_DeleteTime");

                    b.Property<string>("F_DeleteUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_EnabledMark");

                    b.Property<string>("F_ImpId")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("F_ItemId")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("F_LastModifyTime");

                    b.Property<string>("F_LastModifyUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_Name")
                        .HasMaxLength(50);

                    b.Property<string>("F_Spec");

                    b.Property<float?>("F_TotalCharges");

                    b.Property<string>("F_Unit");

                    b.HasKey("F_Id");

                    b.ToTable("Sys_ImportDetail");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.PatientManage.ImportMasterEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<string>("F_AcctPerson")
                        .HasMaxLength(20);

                    b.Property<string>("F_Contacts")
                        .HasMaxLength(20);

                    b.Property<float?>("F_Costs");

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_DeleteMark");

                    b.Property<DateTime?>("F_DeleteTime");

                    b.Property<string>("F_DeleteUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_EnabledMark");

                    b.Property<string>("F_ImpClass")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("F_ImpDate")
                        .IsRequired();

                    b.Property<string>("F_ImpNo")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("F_ImpType")
                        .HasMaxLength(30);

                    b.Property<bool?>("F_IsAcct");

                    b.Property<DateTime?>("F_LastModifyTime");

                    b.Property<string>("F_LastModifyUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_Storage")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("F_Supplier")
                        .HasMaxLength(60);

                    b.Property<string>("F_SupplierPhone")
                        .HasMaxLength(20);

                    b.HasKey("F_Id");

                    b.ToTable("Sys_ImportMaster");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.PatientManage.InfectionEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_DeleteMark");

                    b.Property<DateTime?>("F_DeleteTime");

                    b.Property<string>("F_DeleteUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_EnabledMark");

                    b.Property<string>("F_ImangePath")
                        .HasMaxLength(100);

                    b.Property<float?>("F_Item1");

                    b.Property<float?>("F_Item2");

                    b.Property<float?>("F_Item3");

                    b.Property<float?>("F_Item4");

                    b.Property<float?>("F_Item5");

                    b.Property<float?>("F_Item6");

                    b.Property<float?>("F_Item7");

                    b.Property<DateTime?>("F_LastModifyTime");

                    b.Property<string>("F_LastModifyUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_Memo")
                        .HasMaxLength(200);

                    b.Property<string>("F_RecordPerson")
                        .HasMaxLength(50);

                    b.Property<DateTime>("F_ReportDate");

                    b.HasKey("F_Id");

                    b.ToTable("Sys_Infection");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.PatientManage.InstructionEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_DeleteMark");

                    b.Property<DateTime?>("F_DeleteTime");

                    b.Property<string>("F_DeleteUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_EnabledMark");

                    b.Property<string>("F_FileIndex")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("F_FilePath")
                        .HasMaxLength(200);

                    b.Property<string>("F_FileSize")
                        .HasMaxLength(30);

                    b.Property<string>("F_FileType")
                        .HasMaxLength(10);

                    b.Property<string>("F_InstructionName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<DateTime?>("F_LastModifyTime");

                    b.Property<string>("F_LastModifyUserId")
                        .HasMaxLength(50);

                    b.Property<DateTime>("F_UploadDate");

                    b.Property<string>("F_UploadPerson")
                        .HasMaxLength(20);

                    b.HasKey("F_Id");

                    b.ToTable("Sys_Instruction");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.PatientManage.MaterialEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<float?>("F_Charges");

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_DeleteMark");

                    b.Property<DateTime?>("F_DeleteTime");

                    b.Property<string>("F_DeleteUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_EnabledMark");

                    b.Property<bool?>("F_IsDialyzer");

                    b.Property<DateTime?>("F_LastModifyTime");

                    b.Property<string>("F_LastModifyUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_MaterialCode")
                        .HasMaxLength(15);

                    b.Property<string>("F_MaterialName")
                        .HasMaxLength(40);

                    b.Property<string>("F_MaterialSpec")
                        .HasMaxLength(30);

                    b.Property<string>("F_MaterialSpell")
                        .HasMaxLength(15);

                    b.Property<string>("F_MaterialSupplier")
                        .HasMaxLength(80);

                    b.Property<string>("F_MaterialType")
                        .HasMaxLength(15);

                    b.Property<string>("F_MaterialUnit")
                        .HasMaxLength(20);

                    b.HasKey("F_Id");

                    b.ToTable("Sys_Material");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.PatientManage.MedicalRecordEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<bool?>("F_AuditFlag");

                    b.Property<DateTime?>("F_AuditTime");

                    b.Property<string>("F_Content");

                    b.Property<DateTime?>("F_ContentTime");

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_DeleteMark");

                    b.Property<DateTime?>("F_DeleteTime");

                    b.Property<string>("F_DeleteUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_EnabledMark");

                    b.Property<DateTime?>("F_LastModifyTime");

                    b.Property<string>("F_LastModifyUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_Pid")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("F_Title")
                        .HasMaxLength(80);

                    b.HasKey("F_Id");

                    b.ToTable("Sys_MedicalRecord");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.PatientManage.MonthlySummaryEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<float?>("F_ALB");

                    b.Property<float?>("F_ALT");

                    b.Property<float?>("F_AST");

                    b.Property<string>("F_AccessName")
                        .HasMaxLength(30);

                    b.Property<float?>("F_BloodSpeed");

                    b.Property<float?>("F_CRP");

                    b.Property<float?>("F_Ca");

                    b.Property<float?>("F_Ca1");

                    b.Property<float?>("F_Cl");

                    b.Property<float?>("F_Cl1");

                    b.Property<string>("F_Complication")
                        .HasMaxLength(300);

                    b.Property<string>("F_Content")
                        .HasMaxLength(500);

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_DeleteMark");

                    b.Property<DateTime?>("F_DeleteTime");

                    b.Property<string>("F_DeleteUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_DrugSummary")
                        .HasMaxLength(1000);

                    b.Property<bool?>("F_EnabledMark");

                    b.Property<float?>("F_EstimateHours");

                    b.Property<string>("F_ExamCC")
                        .HasMaxLength(300);

                    b.Property<string>("F_ExamXDT")
                        .HasMaxLength(300);

                    b.Property<string>("F_ExamXP")
                        .HasMaxLength(300);

                    b.Property<float?>("F_FER");

                    b.Property<float?>("F_Glu");

                    b.Property<bool?>("F_HBcAb");

                    b.Property<bool?>("F_HBeAb");

                    b.Property<bool?>("F_HBeAg");

                    b.Property<bool?>("F_HBsAb");

                    b.Property<bool?>("F_HBsAg");

                    b.Property<float?>("F_HCO3");

                    b.Property<float?>("F_HCO31");

                    b.Property<float?>("F_HCT");

                    b.Property<bool?>("F_HCV");

                    b.Property<string>("F_HDDialyzerType")
                        .HasMaxLength(50);

                    b.Property<string>("F_HDFDialyzerType")
                        .HasMaxLength(50);

                    b.Property<int?>("F_HDFTimes");

                    b.Property<string>("F_HDHPDialyzerType")
                        .HasMaxLength(50);

                    b.Property<int?>("F_HDHPTimes");

                    b.Property<int?>("F_HDTimes");

                    b.Property<string>("F_HFDialyzerType")
                        .HasMaxLength(50);

                    b.Property<int?>("F_HFTimes");

                    b.Property<bool?>("F_HIV");

                    b.Property<float?>("F_Hb");

                    b.Property<float?>("F_HeparinAmount");

                    b.Property<string>("F_HeparinType")
                        .HasMaxLength(50);

                    b.Property<string>("F_HeparinUnit")
                        .HasMaxLength(20);

                    b.Property<float?>("F_IdeaWeight");

                    b.Property<float?>("F_K");

                    b.Property<float?>("F_K1");

                    b.Property<DateTime?>("F_LastModifyTime");

                    b.Property<string>("F_LastModifyUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_Month")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<float?>("F_Na");

                    b.Property<float?>("F_Na1");

                    b.Property<float?>("F_P");

                    b.Property<float?>("F_P1");

                    b.Property<float?>("F_PLT");

                    b.Property<string>("F_Pid")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<float?>("F_RBC");

                    b.Property<bool?>("F_RPR");

                    b.Property<float?>("F_Scr");

                    b.Property<float?>("F_Scr1");

                    b.Property<string>("F_Suggest")
                        .HasMaxLength(500);

                    b.Property<float?>("F_TP");

                    b.Property<float?>("F_TS");

                    b.Property<float?>("F_TXYCa");

                    b.Property<float?>("F_TXYHco3");

                    b.Property<float?>("F_TXYK");

                    b.Property<int?>("F_TotalCount");

                    b.Property<float?>("F_UA");

                    b.Property<float?>("F_UA1");

                    b.Property<float?>("F_URR");

                    b.Property<float?>("F_Urea");

                    b.Property<float?>("F_Urea1");

                    b.Property<float?>("F_UrineVolume");

                    b.Property<string>("F_VascularAccess")
                        .HasMaxLength(30);

                    b.Property<float?>("F_WBC");

                    b.Property<int?>("F_WeekTimes");

                    b.Property<float?>("F_iPTH");

                    b.Property<float?>("F_spKtV");

                    b.HasKey("F_Id");

                    b.ToTable("Sys_MonthlySummary");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.PatientManage.NutritionDietaryEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<string>("F_Col1")
                        .HasMaxLength(20);

                    b.Property<string>("F_Col10")
                        .HasMaxLength(20);

                    b.Property<string>("F_Col11")
                        .HasMaxLength(20);

                    b.Property<string>("F_Col2")
                        .HasMaxLength(20);

                    b.Property<string>("F_Col3")
                        .HasMaxLength(20);

                    b.Property<string>("F_Col4")
                        .HasMaxLength(20);

                    b.Property<string>("F_Col5")
                        .HasMaxLength(20);

                    b.Property<string>("F_Col6")
                        .HasMaxLength(20);

                    b.Property<string>("F_Col7")
                        .HasMaxLength(20);

                    b.Property<string>("F_Col8")
                        .HasMaxLength(20);

                    b.Property<string>("F_Col9")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_DeleteMark");

                    b.Property<DateTime?>("F_DeleteTime");

                    b.Property<string>("F_DeleteUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_EnabledMark");

                    b.Property<DateTime?>("F_LastModifyTime");

                    b.Property<string>("F_LastModifyUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_Memo")
                        .HasMaxLength(200);

                    b.Property<string>("F_Name")
                        .HasMaxLength(50);

                    b.Property<string>("F_Py")
                        .HasMaxLength(50);

                    b.Property<string>("F_Type")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("F_Id");

                    b.ToTable("Sys_NutritionDietary");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.PatientManage.OrdersEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_DeleteMark");

                    b.Property<DateTime?>("F_DeleteTime");

                    b.Property<string>("F_DeleteUserId")
                        .HasMaxLength(50);

                    b.Property<int>("F_DialysisNo");

                    b.Property<string>("F_Doctor")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("F_DoctorAuditTime");

                    b.Property<DateTime?>("F_DoctorOrderTime");

                    b.Property<bool?>("F_EnabledMark");

                    b.Property<bool?>("F_IsTemporary");

                    b.Property<DateTime?>("F_LastModifyTime");

                    b.Property<string>("F_LastModifyUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_Memo")
                        .HasMaxLength(150);

                    b.Property<string>("F_Nurse")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("F_NurseOperatorTime");

                    b.Property<string>("F_OrderAdministration")
                        .HasMaxLength(30);

                    b.Property<float?>("F_OrderAmount");

                    b.Property<string>("F_OrderCode")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("F_OrderFrequency")
                        .HasMaxLength(20);

                    b.Property<string>("F_OrderSpec")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("F_OrderStartTime");

                    b.Property<int?>("F_OrderStatus");

                    b.Property<DateTime?>("F_OrderStopTime");

                    b.Property<string>("F_OrderText")
                        .HasMaxLength(50);

                    b.Property<string>("F_OrderType")
                        .HasMaxLength(30);

                    b.Property<string>("F_OrderUnitAmount")
                        .HasMaxLength(20);

                    b.Property<string>("F_OrderUnitSpec")
                        .HasMaxLength(30);

                    b.Property<string>("F_ParentId")
                        .HasMaxLength(50);

                    b.Property<string>("F_Pid")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("F_RecordNo")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int?>("F_SubIndex");

                    b.Property<DateTime?>("F_VisitDate");

                    b.Property<int?>("F_VisitNo");

                    b.HasKey("F_Id");

                    b.ToTable("Sys_Orders");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.PatientManage.OrdersExecLogEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_DeleteMark");

                    b.Property<DateTime?>("F_DeleteTime");

                    b.Property<string>("F_DeleteUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_Doctor")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("F_DoctorAuditTime");

                    b.Property<DateTime?>("F_DoctorOrderTime");

                    b.Property<bool?>("F_EnabledMark");

                    b.Property<bool?>("F_IsTemporary");

                    b.Property<DateTime?>("F_LastModifyTime");

                    b.Property<string>("F_LastModifyUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_Memo")
                        .HasMaxLength(150);

                    b.Property<string>("F_Nurse")
                        .HasMaxLength(20);

                    b.Property<string>("F_NurseId")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("F_NurseOperatorTime");

                    b.Property<string>("F_Oid")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("F_OrderAdministration")
                        .HasMaxLength(30);

                    b.Property<float?>("F_OrderAmount");

                    b.Property<string>("F_OrderCode")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("F_OrderFrequency")
                        .HasMaxLength(20);

                    b.Property<string>("F_OrderSpec")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("F_OrderStartTime");

                    b.Property<DateTime?>("F_OrderStopTime");

                    b.Property<string>("F_OrderText")
                        .HasMaxLength(50);

                    b.Property<string>("F_OrderType")
                        .HasMaxLength(30);

                    b.Property<string>("F_OrderUnitAmount")
                        .HasMaxLength(20);

                    b.Property<string>("F_OrderUnitSpec")
                        .HasMaxLength(30);

                    b.Property<string>("F_Pid")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("F_VisitDate");

                    b.Property<int?>("F_VisitNo");

                    b.HasKey("F_Id");

                    b.ToTable("Sys_OrdersExecLog");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.PatientManage.PatVisitEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<string>("F_AccessName")
                        .HasMaxLength(30);

                    b.Property<string>("F_BedNo")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("F_BirthDay");

                    b.Property<float?>("F_BloodSpeed");

                    b.Property<float?>("F_Ca");

                    b.Property<string>("F_CheckPerson")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_DJMH")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_DeleteMark");

                    b.Property<DateTime?>("F_DeleteTime");

                    b.Property<string>("F_DeleteUserId")
                        .HasMaxLength(50);

                    b.Property<float?>("F_DialysateTemperature");

                    b.Property<string>("F_DialysisBedNo")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("F_DialysisEndTime");

                    b.Property<string>("F_DialysisHours")
                        .HasMaxLength(10);

                    b.Property<int?>("F_DialysisNo");

                    b.Property<DateTime?>("F_DialysisStartTime");

                    b.Property<string>("F_DialysisType")
                        .HasMaxLength(30);

                    b.Property<string>("F_DialyzerStatus")
                        .HasMaxLength(50);

                    b.Property<string>("F_DialyzerType1")
                        .HasMaxLength(50);

                    b.Property<string>("F_DialyzerType2")
                        .HasMaxLength(50);

                    b.Property<float?>("F_DiastolicPressure");

                    b.Property<string>("F_DilutionType")
                        .HasMaxLength(10);

                    b.Property<string>("F_DisinfectPerson")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("F_DisinfectTime");

                    b.Property<string>("F_Doctor")
                        .HasMaxLength(50);

                    b.Property<string>("F_DuctOpeningStatus")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_EnabledMark");

                    b.Property<string>("F_EndPerson")
                        .HasMaxLength(50);

                    b.Property<float?>("F_EstimateHours");

                    b.Property<float?>("F_ExchangeAmount");

                    b.Property<float?>("F_ExchangeSpeed");

                    b.Property<DateTime?>("F_FirstWeightTime");

                    b.Property<string>("F_FistulaStatus")
                        .HasMaxLength(50);

                    b.Property<string>("F_Gender")
                        .HasMaxLength(8);

                    b.Property<string>("F_GroupName")
                        .HasMaxLength(20);

                    b.Property<float?>("F_Hco3");

                    b.Property<float?>("F_HeparinAddAmount");

                    b.Property<string>("F_HeparinAddSpeedUnit")
                        .HasMaxLength(20);

                    b.Property<float?>("F_HeparinAmount");

                    b.Property<string>("F_HeparinType")
                        .HasMaxLength(50);

                    b.Property<string>("F_HeparinUnit")
                        .HasMaxLength(15);

                    b.Property<string>("F_InpNo")
                        .HasMaxLength(20);

                    b.Property<bool?>("F_IsAcct");

                    b.Property<bool?>("F_IsArchive");

                    b.Property<bool?>("F_IsCritical");

                    b.Property<bool?>("F_IsPrint");

                    b.Property<float?>("F_K");

                    b.Property<DateTime?>("F_LastModifyTime");

                    b.Property<string>("F_LastModifyUserId")
                        .HasMaxLength(50);

                    b.Property<float?>("F_LastWeightValue");

                    b.Property<bool?>("F_LowCa");

                    b.Property<string>("F_Machine")
                        .HasMaxLength(30);

                    b.Property<float?>("F_MachineShowAmount");

                    b.Property<string>("F_Memo");

                    b.Property<float?>("F_Na");

                    b.Property<string>("F_Name")
                        .HasMaxLength(20);

                    b.Property<string>("F_Nurse")
                        .HasMaxLength(50);

                    b.Property<string>("F_PGother")
                        .HasMaxLength(150);

                    b.Property<string>("F_PGwzcx1")
                        .HasMaxLength(50);

                    b.Property<string>("F_PGwzcx2")
                        .HasMaxLength(50);

                    b.Property<string>("F_PGwzcx3")
                        .HasMaxLength(50);

                    b.Property<string>("F_PGwzsz")
                        .HasMaxLength(50);

                    b.Property<string>("F_PGxftz1")
                        .HasMaxLength(50);

                    b.Property<string>("F_PGxftz2")
                        .HasMaxLength(50);

                    b.Property<string>("F_PGxftz3")
                        .HasMaxLength(50);

                    b.Property<string>("F_PatientSourse")
                        .HasMaxLength(20);

                    b.Property<string>("F_PatientStatus")
                        .HasMaxLength(200);

                    b.Property<string>("F_Pid")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<float?>("F_Pulse");

                    b.Property<string>("F_PuncturePerson")
                        .HasMaxLength(50);

                    b.Property<float?>("F_RealExchangeAmount");

                    b.Property<string>("F_Reason")
                        .HasMaxLength(255);

                    b.Property<string>("F_RecordDoctor")
                        .HasMaxLength(50);

                    b.Property<string>("F_RecordNo")
                        .HasMaxLength(20);

                    b.Property<string>("F_StartPerson")
                        .HasMaxLength(50);

                    b.Property<float?>("F_SystolicPressure");

                    b.Property<float?>("F_Temperature");

                    b.Property<string>("F_VascularAccess")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("F_VisitDate");

                    b.Property<int?>("F_VisitNo");

                    b.Property<float?>("F_WeightST");

                    b.Property<float?>("F_WeightSXTH");

                    b.Property<float?>("F_WeightTH");

                    b.Property<float?>("F_WeightTQ");

                    b.Property<float?>("F_WeightYT");

                    b.HasKey("F_Id");

                    b.ToTable("Sys_PatVisit");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.PatientManage.PatientEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<string>("F_Address")
                        .HasMaxLength(80);

                    b.Property<DateTime?>("F_BirthDay");

                    b.Property<string>("F_BloodAbo")
                        .HasMaxLength(6);

                    b.Property<string>("F_BloodRh")
                        .HasMaxLength(6);

                    b.Property<string>("F_CardNo")
                        .HasMaxLength(20);

                    b.Property<float?>("F_Charges");

                    b.Property<string>("F_Contacts")
                        .HasMaxLength(20);

                    b.Property<string>("F_Contacts2")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_DeleteMark");

                    b.Property<DateTime?>("F_DeleteTime");

                    b.Property<string>("F_DeleteUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_Diagnosis")
                        .HasMaxLength(80);

                    b.Property<int>("F_DialysisNo");

                    b.Property<DateTime?>("F_DialysisStartTime");

                    b.Property<bool?>("F_EnabledMark");

                    b.Property<string>("F_Gender")
                        .HasMaxLength(8);

                    b.Property<string>("F_HBcAb")
                        .HasMaxLength(6);

                    b.Property<string>("F_HBeAb")
                        .HasMaxLength(6);

                    b.Property<string>("F_HBeAg")
                        .HasMaxLength(6);

                    b.Property<string>("F_HBsAb")
                        .HasMaxLength(6);

                    b.Property<string>("F_HBsAg")
                        .HasMaxLength(6);

                    b.Property<string>("F_HCVAb")
                        .HasMaxLength(6);

                    b.Property<string>("F_HeadIcon")
                        .HasMaxLength(100);

                    b.Property<float?>("F_Height");

                    b.Property<string>("F_Hiv")
                        .HasMaxLength(6);

                    b.Property<string>("F_IdNo")
                        .HasMaxLength(20);

                    b.Property<float?>("F_IdealWeight");

                    b.Property<string>("F_InsuranceNo")
                        .HasMaxLength(20);

                    b.Property<string>("F_InsuranceType")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("F_LastModifyTime");

                    b.Property<string>("F_LastModifyUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_MaritalStatus")
                        .HasMaxLength(8);

                    b.Property<string>("F_MedicalHistory")
                        .HasMaxLength(300);

                    b.Property<string>("F_Name")
                        .HasMaxLength(20);

                    b.Property<string>("F_PY")
                        .HasMaxLength(20);

                    b.Property<string>("F_PatientNo")
                        .HasMaxLength(20);

                    b.Property<string>("F_PhoneNo")
                        .HasMaxLength(20);

                    b.Property<string>("F_PhoneNo2")
                        .HasMaxLength(20);

                    b.Property<string>("F_PrimaryDisease")
                        .HasMaxLength(80);

                    b.Property<string>("F_RecordNo")
                        .HasMaxLength(20);

                    b.Property<string>("F_Tp")
                        .HasMaxLength(6);

                    b.Property<string>("F_Trasfer")
                        .HasMaxLength(20);

                    b.HasKey("F_Id");

                    b.ToTable("Sys_Patient");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.PatientManage.ProcessFlowEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_DeleteMark");

                    b.Property<DateTime?>("F_DeleteTime");

                    b.Property<string>("F_DeleteUserId")
                        .HasMaxLength(50);

                    b.Property<int?>("F_DialylisNo");

                    b.Property<bool?>("F_EnabledMark");

                    b.Property<DateTime?>("F_LastModifyTime");

                    b.Property<string>("F_LastModifyUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_PGender")
                        .HasMaxLength(10);

                    b.Property<string>("F_PName")
                        .HasMaxLength(20);

                    b.Property<string>("F_Pid")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<float?>("F_PostUrea");

                    b.Property<float?>("F_PostWeight");

                    b.Property<float?>("F_PreUrea");

                    b.Property<float?>("F_PreWeight");

                    b.Property<float?>("F_Result");

                    b.Property<bool?>("F_Step_1");

                    b.Property<string>("F_Step_1_Measures")
                        .HasMaxLength(500);

                    b.Property<bool?>("F_Step_1_Reason1");

                    b.Property<bool?>("F_Step_1_Reason2");

                    b.Property<bool?>("F_Step_1_Reason3");

                    b.Property<bool?>("F_Step_2");

                    b.Property<string>("F_Step_2_Measures")
                        .HasMaxLength(500);

                    b.Property<bool?>("F_Step_2_Reason1");

                    b.Property<bool?>("F_Step_2_Reason2");

                    b.Property<bool?>("F_Step_2_Reason3");

                    b.Property<bool?>("F_Step_2_Reason4");

                    b.Property<bool?>("F_Step_3");

                    b.Property<string>("F_Step_3_Measures")
                        .HasMaxLength(500);

                    b.Property<bool?>("F_Step_4");

                    b.Property<string>("F_Step_4_Measures")
                        .HasMaxLength(500);

                    b.Property<bool?>("F_Step_5");

                    b.Property<string>("F_Step_5_Measures")
                        .HasMaxLength(500);

                    b.Property<float?>("F_TotalHours");

                    b.Property<string>("F_Vid")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("F_VisitDate");

                    b.Property<int?>("F_VisitNo");

                    b.HasKey("F_Id");

                    b.ToTable("Sys_ProcessFlow");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.PatientManage.PunctureEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_DeleteMark");

                    b.Property<DateTime?>("F_DeleteTime");

                    b.Property<string>("F_DeleteUserId")
                        .HasMaxLength(50);

                    b.Property<float?>("F_Distance1");

                    b.Property<float?>("F_Distance2");

                    b.Property<bool?>("F_EnabledMark");

                    b.Property<bool?>("F_IsSuccess");

                    b.Property<DateTime?>("F_LastModifyTime");

                    b.Property<string>("F_LastModifyUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_Memo")
                        .HasMaxLength(250);

                    b.Property<string>("F_Nurse")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("F_OperateTime");

                    b.Property<string>("F_Pid")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("F_Point1")
                        .HasMaxLength(20);

                    b.Property<string>("F_Point2")
                        .HasMaxLength(20);

                    b.HasKey("F_Id");

                    b.ToTable("Sys_Puncture");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.PatientManage.QualityItemEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_DeleteMark");

                    b.Property<DateTime?>("F_DeleteTime");

                    b.Property<string>("F_DeleteUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_EnabledMark");

                    b.Property<string>("F_HisItemCode")
                        .HasMaxLength(20);

                    b.Property<string>("F_ItemCode")
                        .HasMaxLength(20);

                    b.Property<string>("F_ItemName")
                        .HasMaxLength(50);

                    b.Property<string>("F_ItemType")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("F_LastModifyTime");

                    b.Property<string>("F_LastModifyUserId")
                        .HasMaxLength(50);

                    b.Property<float?>("F_LowerCriticalValue");

                    b.Property<float?>("F_LowerValue");

                    b.Property<string>("F_Memo")
                        .HasMaxLength(500);

                    b.Property<int?>("F_OrderNo");

                    b.Property<string>("F_Result")
                        .HasMaxLength(20);

                    b.Property<bool?>("F_ResultType");

                    b.Property<string>("F_Unit")
                        .HasMaxLength(20);

                    b.Property<float?>("F_UpperCriticalValue");

                    b.Property<float?>("F_UpperValue");

                    b.HasKey("F_Id");

                    b.ToTable("Sys_QualityItem");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.PatientManage.QualityItemPartitionEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<bool>("F_LowerCheck");

                    b.Property<float?>("F_LowerValue");

                    b.Property<int>("F_OrderNo");

                    b.Property<string>("F_ParentId")
                        .HasMaxLength(50);

                    b.Property<bool>("F_UpperCheck");

                    b.Property<float?>("F_UpperValue");

                    b.HasKey("F_Id");

                    b.ToTable("Sys_QualityItemPartition");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.PatientManage.QualityResultEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_DeleteMark");

                    b.Property<DateTime?>("F_DeleteTime");

                    b.Property<string>("F_DeleteUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_EnabledMark");

                    b.Property<string>("F_Flag")
                        .HasMaxLength(20);

                    b.Property<string>("F_ItemCode")
                        .HasMaxLength(20);

                    b.Property<string>("F_ItemId")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("F_ItemName")
                        .HasMaxLength(20);

                    b.Property<string>("F_ItemType")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("F_LastModifyTime");

                    b.Property<string>("F_LastModifyUserId")
                        .HasMaxLength(50);

                    b.Property<float?>("F_LowerCriticalValue");

                    b.Property<float?>("F_LowerValue");

                    b.Property<string>("F_Memo")
                        .HasMaxLength(500);

                    b.Property<string>("F_Pid")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("F_ReportTime");

                    b.Property<string>("F_Result")
                        .HasMaxLength(20);

                    b.Property<bool?>("F_ResultType");

                    b.Property<string>("F_Unit")
                        .HasMaxLength(20);

                    b.Property<float?>("F_UpperCriticalValue");

                    b.Property<float?>("F_UpperValue");

                    b.HasKey("F_Id");

                    b.ToTable("Sys_QualityResult");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.PatientManage.RecordTemplateEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<string>("F_Content")
                        .IsRequired()
                        .HasMaxLength(1000);

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_DeleteMark");

                    b.Property<DateTime?>("F_DeleteTime");

                    b.Property<string>("F_DeleteUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_EnabledMark");

                    b.Property<bool?>("F_IsPrivate");

                    b.Property<DateTime?>("F_LastModifyTime");

                    b.Property<string>("F_LastModifyUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_Title")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("F_Id");

                    b.ToTable("Sys_RecordTemplate");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.PatientManage.RegulationEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_DeleteMark");

                    b.Property<DateTime?>("F_DeleteTime");

                    b.Property<string>("F_DeleteUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_EnabledMark");

                    b.Property<string>("F_FileIndex")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("F_FilePath")
                        .HasMaxLength(200);

                    b.Property<string>("F_FileSize")
                        .HasMaxLength(30);

                    b.Property<string>("F_FileType")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("F_LastModifyTime");

                    b.Property<string>("F_LastModifyUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_RegulationName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<DateTime>("F_UploadDate");

                    b.Property<string>("F_UploadPerson")
                        .HasMaxLength(20);

                    b.HasKey("F_Id");

                    b.ToTable("Sys_Regulation");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.PatientManage.ScheduleEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("F_EndDate");

                    b.Property<string>("F_GroupName")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("F_StartDate");

                    b.Property<int?>("F_VisitNo");

                    b.HasKey("F_Id");

                    b.ToTable("Sys_Schedule");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.PatientManage.ScheduleWeekEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<string>("F_BId")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("F_CurrentDate");

                    b.Property<bool?>("F_DeleteMark");

                    b.Property<DateTime?>("F_DeleteTime");

                    b.Property<string>("F_DeleteUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_DialysisBedNo")
                        .HasMaxLength(10);

                    b.Property<string>("F_DialysisType1")
                        .HasMaxLength(20);

                    b.Property<string>("F_DialysisType10")
                        .HasMaxLength(20);

                    b.Property<string>("F_DialysisType11")
                        .HasMaxLength(20);

                    b.Property<string>("F_DialysisType12")
                        .HasMaxLength(20);

                    b.Property<string>("F_DialysisType13")
                        .HasMaxLength(20);

                    b.Property<string>("F_DialysisType14")
                        .HasMaxLength(20);

                    b.Property<string>("F_DialysisType15")
                        .HasMaxLength(20);

                    b.Property<string>("F_DialysisType16")
                        .HasMaxLength(20);

                    b.Property<string>("F_DialysisType17")
                        .HasMaxLength(20);

                    b.Property<string>("F_DialysisType18")
                        .HasMaxLength(20);

                    b.Property<string>("F_DialysisType19")
                        .HasMaxLength(20);

                    b.Property<string>("F_DialysisType2")
                        .HasMaxLength(20);

                    b.Property<string>("F_DialysisType20")
                        .HasMaxLength(20);

                    b.Property<string>("F_DialysisType21")
                        .HasMaxLength(20);

                    b.Property<string>("F_DialysisType3")
                        .HasMaxLength(20);

                    b.Property<string>("F_DialysisType4")
                        .HasMaxLength(20);

                    b.Property<string>("F_DialysisType5")
                        .HasMaxLength(20);

                    b.Property<string>("F_DialysisType6")
                        .HasMaxLength(20);

                    b.Property<string>("F_DialysisType7")
                        .HasMaxLength(20);

                    b.Property<string>("F_DialysisType8")
                        .HasMaxLength(20);

                    b.Property<string>("F_DialysisType9")
                        .HasMaxLength(20);

                    b.Property<bool?>("F_EnabledMark");

                    b.Property<string>("F_Friday1");

                    b.Property<string>("F_Friday2")
                        .HasMaxLength(10);

                    b.Property<string>("F_Friday3")
                        .HasMaxLength(10);

                    b.Property<string>("F_GroupName")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("F_LastModifyTime");

                    b.Property<string>("F_LastModifyUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_Monday1")
                        .HasMaxLength(10);

                    b.Property<string>("F_Monday2")
                        .HasMaxLength(10);

                    b.Property<string>("F_Monday3")
                        .HasMaxLength(10);

                    b.Property<string>("F_PId1")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("F_PId10")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("F_PId11")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("F_PId12")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("F_PId13")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("F_PId14")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("F_PId15")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("F_PId16")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("F_PId17")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("F_PId18")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("F_PId19")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("F_PId2")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("F_PId20")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("F_PId21")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("F_PId3")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("F_PId4")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("F_PId5")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("F_PId6")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("F_PId7")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("F_PId8")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("F_PId9")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("F_Saturday1");

                    b.Property<string>("F_Saturday2")
                        .HasMaxLength(10);

                    b.Property<string>("F_Saturday3")
                        .HasMaxLength(10);

                    b.Property<int?>("F_Sort");

                    b.Property<string>("F_Sunday1");

                    b.Property<string>("F_Sunday2")
                        .HasMaxLength(10);

                    b.Property<string>("F_Sunday3")
                        .HasMaxLength(10);

                    b.Property<string>("F_Thursday1");

                    b.Property<string>("F_Thursday2")
                        .HasMaxLength(10);

                    b.Property<string>("F_Thursday3")
                        .HasMaxLength(10);

                    b.Property<string>("F_Tuesday1")
                        .HasMaxLength(10);

                    b.Property<string>("F_Tuesday2")
                        .HasMaxLength(10);

                    b.Property<string>("F_Tuesday3")
                        .HasMaxLength(10);

                    b.Property<string>("F_Wednesday1");

                    b.Property<string>("F_Wednesday2")
                        .HasMaxLength(10);

                    b.Property<string>("F_Wednesday3")
                        .HasMaxLength(10);

                    b.HasKey("F_Id");

                    b.ToTable("Sys_ScheduleWeek");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.PatientManage.SettingEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<string>("F_AccessName")
                        .HasMaxLength(30);

                    b.Property<float?>("F_BloodSpeed");

                    b.Property<float?>("F_Ca");

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_DeleteMark");

                    b.Property<DateTime?>("F_DeleteTime");

                    b.Property<string>("F_DeleteUserId")
                        .HasMaxLength(50);

                    b.Property<float?>("F_DialysateTemperature");

                    b.Property<string>("F_DialysisType")
                        .HasMaxLength(30);

                    b.Property<string>("F_DialyzerType1")
                        .HasMaxLength(50);

                    b.Property<string>("F_DialyzerType2")
                        .HasMaxLength(50);

                    b.Property<string>("F_DilutionType")
                        .HasMaxLength(30);

                    b.Property<bool?>("F_EnabledMark");

                    b.Property<float?>("F_EstimateHours");

                    b.Property<float?>("F_ExchangeAmount");

                    b.Property<float?>("F_ExchangeSpeed");

                    b.Property<float?>("F_Hco3");

                    b.Property<float?>("F_HeparinAddAmount");

                    b.Property<string>("F_HeparinAddSpeedUnit")
                        .HasMaxLength(20);

                    b.Property<float?>("F_HeparinAmount");

                    b.Property<string>("F_HeparinType")
                        .HasMaxLength(50);

                    b.Property<string>("F_HeparinUnit")
                        .HasMaxLength(15);

                    b.Property<bool>("F_IsDefault");

                    b.Property<float?>("F_K");

                    b.Property<DateTime?>("F_LastModifyTime");

                    b.Property<string>("F_LastModifyUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_LowCa");

                    b.Property<float?>("F_Na");

                    b.Property<string>("F_Pid")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("F_VascularAccess")
                        .HasMaxLength(30);

                    b.HasKey("F_Id");

                    b.ToTable("Sys_Setting");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.PatientManage.SettingModelEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<string>("F_AccessName")
                        .HasMaxLength(30);

                    b.Property<float?>("F_BloodSpeed");

                    b.Property<float?>("F_Ca");

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_DeleteMark");

                    b.Property<DateTime?>("F_DeleteTime");

                    b.Property<string>("F_DeleteUserId")
                        .HasMaxLength(50);

                    b.Property<float?>("F_DialysateTemperature");

                    b.Property<string>("F_DialysisType")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("F_DialyzerType1")
                        .HasMaxLength(50);

                    b.Property<string>("F_DialyzerType2")
                        .HasMaxLength(50);

                    b.Property<string>("F_DilutionType")
                        .HasMaxLength(30);

                    b.Property<bool?>("F_EnabledMark");

                    b.Property<float?>("F_EstimateHours");

                    b.Property<float?>("F_ExchangeAmount");

                    b.Property<float?>("F_ExchangeSpeed");

                    b.Property<float?>("F_Hco3");

                    b.Property<float?>("F_HeparinAddAmount");

                    b.Property<string>("F_HeparinAddSpeedUnit")
                        .HasMaxLength(20);

                    b.Property<float?>("F_HeparinAmount");

                    b.Property<string>("F_HeparinType")
                        .HasMaxLength(50);

                    b.Property<string>("F_HeparinUnit")
                        .HasMaxLength(15);

                    b.Property<float?>("F_K");

                    b.Property<DateTime?>("F_LastModifyTime");

                    b.Property<string>("F_LastModifyUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_LowCa");

                    b.Property<float?>("F_Na");

                    b.Property<string>("F_VascularAccess")
                        .HasMaxLength(30);

                    b.HasKey("F_Id");

                    b.ToTable("Sys_SettingModel");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.PatientManage.StorageEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<int?>("F_Amount");

                    b.Property<float?>("F_Charges");

                    b.Property<DateTime?>("F_CheckTime");

                    b.Property<string>("F_Code")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_DeleteMark");

                    b.Property<DateTime?>("F_DeleteTime");

                    b.Property<string>("F_DeleteUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_EnabledMark");

                    b.Property<string>("F_ImpClass")
                        .HasMaxLength(30);

                    b.Property<string>("F_ItemId")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("F_LastModifyTime");

                    b.Property<string>("F_LastModifyUserId")
                        .HasMaxLength(50);

                    b.Property<int?>("F_MaxAmount");

                    b.Property<string>("F_Memo");

                    b.Property<int?>("F_MinAmount");

                    b.Property<string>("F_Name")
                        .HasMaxLength(50);

                    b.Property<string>("F_Py");

                    b.Property<int?>("F_RealAmount");

                    b.Property<string>("F_Spec");

                    b.Property<string>("F_Storage")
                        .HasMaxLength(50);

                    b.Property<float?>("F_TotalCharges");

                    b.Property<string>("F_Unit");

                    b.HasKey("F_Id");

                    b.ToTable("Sys_Storage");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.PatientManage.StorageLogEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<int?>("F_Amount");

                    b.Property<float?>("F_Charges");

                    b.Property<DateTime?>("F_CheckTime");

                    b.Property<string>("F_CheckType")
                        .HasMaxLength(20);

                    b.Property<string>("F_Code")
                        .HasMaxLength(20);

                    b.Property<string>("F_ImpClass")
                        .HasMaxLength(30);

                    b.Property<string>("F_ItemId")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("F_Name")
                        .HasMaxLength(50);

                    b.Property<int?>("F_RealAmount");

                    b.Property<string>("F_Spec")
                        .HasMaxLength(80);

                    b.Property<string>("F_Storage")
                        .HasMaxLength(50);

                    b.Property<float?>("F_TotalCharges");

                    b.Property<string>("F_Unit")
                        .HasMaxLength(50);

                    b.HasKey("F_Id");

                    b.ToTable("Sys_StorageLog");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.PatientManage.TransferLogEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_DeleteMark");

                    b.Property<DateTime?>("F_DeleteTime");

                    b.Property<string>("F_DeleteUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_EnabledMark");

                    b.Property<string>("F_ExitReason")
                        .HasMaxLength(150);

                    b.Property<string>("F_ExitType")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("F_LastModifyTime");

                    b.Property<string>("F_LastModifyUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_LocationOut")
                        .HasMaxLength(80);

                    b.Property<string>("F_Memo")
                        .HasMaxLength(150);

                    b.Property<string>("F_Pid")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("F_Status")
                        .HasMaxLength(20);

                    b.Property<DateTime>("F_TransferDate");

                    b.Property<string>("F_TransferReason")
                        .HasMaxLength(100);

                    b.HasKey("F_Id");

                    b.ToTable("Sys_TransferLog");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.PatientManage.TreatmentEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<float?>("F_Charges");

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_DeleteMark");

                    b.Property<DateTime?>("F_DeleteTime");

                    b.Property<string>("F_DeleteUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_EnabledMark");

                    b.Property<DateTime?>("F_LastModifyTime");

                    b.Property<string>("F_LastModifyUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_TreatmentCode")
                        .HasMaxLength(15);

                    b.Property<string>("F_TreatmentName")
                        .HasMaxLength(40);

                    b.Property<string>("F_TreatmentSpec")
                        .HasMaxLength(30);

                    b.Property<string>("F_TreatmentSpell")
                        .HasMaxLength(15);

                    b.Property<string>("F_TreatmentUnit")
                        .HasMaxLength(20);

                    b.HasKey("F_Id");

                    b.ToTable("Sys_Treatment");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.PatientManage.VascularAccessEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<float?>("F_BloodSpeed");

                    b.Property<float?>("F_BloodSpeed_Idea");

                    b.Property<string>("F_BodyPart")
                        .HasMaxLength(30);

                    b.Property<string>("F_BodyPosition")
                        .HasMaxLength(30);

                    b.Property<string>("F_Complication")
                        .HasMaxLength(500);

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_DeleteMark");

                    b.Property<DateTime?>("F_DeleteTime");

                    b.Property<string>("F_DeleteUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_DisabledRemark")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("F_DiscardTime");

                    b.Property<bool?>("F_EnabledMark");

                    b.Property<DateTime?>("F_FirstUseTime");

                    b.Property<DateTime?>("F_LastModifyTime");

                    b.Property<string>("F_LastModifyUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_Memo")
                        .HasMaxLength(500);

                    b.Property<DateTime>("F_OperateTime");

                    b.Property<string>("F_PicPath")
                        .HasMaxLength(100);

                    b.Property<string>("F_Pid")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("F_Type")
                        .HasMaxLength(30);

                    b.Property<string>("F_VascularAccess")
                        .HasMaxLength(30);

                    b.HasKey("F_Id");

                    b.ToTable("Sys_VascularAccess");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.PatientManage.WeightLogEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<DateTime>("F_CreatorTime");

                    b.Property<float?>("F_Value");

                    b.Property<string>("F_Vid")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("F_Id");

                    b.ToTable("Sys_WeightLog");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.PatientManage.YTWeightLogEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<float?>("F_Value");

                    b.Property<string>("F_Vid")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("F_Id");

                    b.ToTable("Sys_YTWeightLog");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.SystemManage.AreaEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_DeleteMark");

                    b.Property<DateTime?>("F_DeleteTime");

                    b.Property<string>("F_DeleteUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_Description")
                        .HasMaxLength(500);

                    b.Property<string>("F_EnCode")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_EnabledMark");

                    b.Property<string>("F_FullName")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("F_LastModifyTime");

                    b.Property<string>("F_LastModifyUserId")
                        .HasMaxLength(50);

                    b.Property<int?>("F_Layers");

                    b.Property<string>("F_ParentId")
                        .HasMaxLength(50);

                    b.Property<string>("F_SimpleSpelling")
                        .HasMaxLength(50);

                    b.Property<int?>("F_SortCode");

                    b.HasKey("F_Id");

                    b.ToTable("Sys_Area");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.SystemManage.AuditLogEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<string>("F_ControllName")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_Exception");

                    b.Property<string>("F_MethodName")
                        .HasMaxLength(30);

                    b.Property<string>("F_Parameters");

                    b.Property<string>("F_Result");

                    b.HasKey("F_Id");

                    b.ToTable("Sys_AuditLog");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.SystemManage.ItemsDetailEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_DeleteMark");

                    b.Property<DateTime?>("F_DeleteTime");

                    b.Property<string>("F_DeleteUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_Description")
                        .HasMaxLength(500);

                    b.Property<bool?>("F_EnabledMark");

                    b.Property<bool?>("F_IsDefault");

                    b.Property<string>("F_ItemCode")
                        .HasMaxLength(50);

                    b.Property<string>("F_ItemId")
                        .HasMaxLength(50);

                    b.Property<string>("F_ItemName")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("F_LastModifyTime");

                    b.Property<string>("F_LastModifyUserId")
                        .HasMaxLength(50);

                    b.Property<int?>("F_Layers");

                    b.Property<string>("F_ParentId")
                        .HasMaxLength(50);

                    b.Property<string>("F_SimpleSpelling")
                        .HasMaxLength(50);

                    b.Property<int?>("F_SortCode");

                    b.HasKey("F_Id");

                    b.ToTable("Sys_ItemsDetail");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.SystemManage.ItemsEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_DeleteMark");

                    b.Property<DateTime?>("F_DeleteTime");

                    b.Property<string>("F_DeleteUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_Description")
                        .HasMaxLength(500);

                    b.Property<string>("F_EnCode")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_EnabledMark");

                    b.Property<string>("F_FullName")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_IsTree");

                    b.Property<DateTime?>("F_LastModifyTime");

                    b.Property<string>("F_LastModifyUserId")
                        .HasMaxLength(50);

                    b.Property<int?>("F_Layers");

                    b.Property<string>("F_ParentId")
                        .HasMaxLength(50);

                    b.Property<int?>("F_SortCode");

                    b.HasKey("F_Id");

                    b.ToTable("Sys_Items");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.SystemManage.ModuleButtonEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<bool?>("F_AllowDelete");

                    b.Property<bool?>("F_AllowEdit");

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_DeleteMark");

                    b.Property<DateTime?>("F_DeleteTime");

                    b.Property<string>("F_DeleteUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_Description")
                        .HasMaxLength(500);

                    b.Property<string>("F_EnCode")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_EnabledMark");

                    b.Property<string>("F_FullName")
                        .HasMaxLength(50);

                    b.Property<string>("F_Icon")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_IsPublic");

                    b.Property<string>("F_JsEvent")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("F_LastModifyTime");

                    b.Property<string>("F_LastModifyUserId")
                        .HasMaxLength(50);

                    b.Property<int?>("F_Layers");

                    b.Property<int?>("F_Location");

                    b.Property<string>("F_ModuleId")
                        .HasMaxLength(50);

                    b.Property<string>("F_ParentId")
                        .HasMaxLength(50);

                    b.Property<int?>("F_SortCode");

                    b.Property<bool?>("F_Split");

                    b.Property<string>("F_UrlAddress")
                        .HasMaxLength(50);

                    b.HasKey("F_Id");

                    b.ToTable("Sys_ModuleButton");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.SystemManage.ModuleEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<bool?>("F_AllowDelete");

                    b.Property<bool?>("F_AllowEdit");

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_DeleteMark");

                    b.Property<DateTime?>("F_DeleteTime");

                    b.Property<string>("F_DeleteUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_Description")
                        .HasMaxLength(500);

                    b.Property<string>("F_EnCode")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_EnabledMark");

                    b.Property<string>("F_FullName")
                        .HasMaxLength(50);

                    b.Property<string>("F_Icon")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_IsExpand");

                    b.Property<bool?>("F_IsMenu");

                    b.Property<bool?>("F_IsPublic");

                    b.Property<DateTime?>("F_LastModifyTime");

                    b.Property<string>("F_LastModifyUserId")
                        .HasMaxLength(50);

                    b.Property<int?>("F_Layers");

                    b.Property<string>("F_ParentId")
                        .HasMaxLength(50);

                    b.Property<int?>("F_SortCode");

                    b.Property<string>("F_Target")
                        .HasMaxLength(50);

                    b.Property<string>("F_UrlAddress")
                        .HasMaxLength(50);

                    b.HasKey("F_Id");

                    b.ToTable("Sys_Module");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.SystemManage.OrganizeEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<string>("F_Address")
                        .HasMaxLength(500);

                    b.Property<bool?>("F_AllowDelete");

                    b.Property<bool?>("F_AllowEdit");

                    b.Property<string>("F_AreaId")
                        .HasMaxLength(50);

                    b.Property<string>("F_CategoryId")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_DeleteMark");

                    b.Property<DateTime?>("F_DeleteTime");

                    b.Property<string>("F_DeleteUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_Description")
                        .HasMaxLength(200);

                    b.Property<string>("F_Email")
                        .HasMaxLength(50);

                    b.Property<string>("F_EnCode")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_EnabledMark");

                    b.Property<string>("F_Fax")
                        .HasMaxLength(20);

                    b.Property<string>("F_FullName")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("F_LastModifyTime");

                    b.Property<string>("F_LastModifyUserId")
                        .HasMaxLength(50);

                    b.Property<int?>("F_Layers");

                    b.Property<string>("F_ManagerId")
                        .HasMaxLength(50);

                    b.Property<string>("F_MobilePhone")
                        .HasMaxLength(20);

                    b.Property<string>("F_ParentId")
                        .HasMaxLength(50);

                    b.Property<string>("F_ShortName")
                        .HasMaxLength(50);

                    b.Property<int?>("F_SortCode");

                    b.Property<string>("F_TelePhone")
                        .HasMaxLength(20);

                    b.Property<string>("F_WeChat")
                        .HasMaxLength(50);

                    b.HasKey("F_Id");

                    b.ToTable("Sys_Organize");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.SystemManage.RoleAuthorizeEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_ItemId")
                        .HasMaxLength(50);

                    b.Property<int?>("F_ItemType");

                    b.Property<string>("F_ObjectId")
                        .HasMaxLength(50);

                    b.Property<int?>("F_ObjectType");

                    b.Property<int?>("F_SortCode");

                    b.HasKey("F_Id");

                    b.ToTable("Sys_RoleAuthorize");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.SystemManage.RoleEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<bool?>("F_AllowDelete");

                    b.Property<bool?>("F_AllowEdit");

                    b.Property<int?>("F_Category");

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_DeleteMark");

                    b.Property<DateTime?>("F_DeleteTime");

                    b.Property<string>("F_DeleteUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_Description")
                        .HasMaxLength(500);

                    b.Property<string>("F_EnCode")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_EnabledMark");

                    b.Property<string>("F_FullName")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("F_LastModifyTime");

                    b.Property<string>("F_LastModifyUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_OrganizeId")
                        .HasMaxLength(50);

                    b.Property<int?>("F_SortCode");

                    b.Property<string>("F_Type")
                        .HasMaxLength(50);

                    b.HasKey("F_Id");

                    b.ToTable("Sys_Role");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.SystemManage.UserEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<string>("F_Account")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("F_Birthday");

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_DeleteMark");

                    b.Property<DateTime?>("F_DeleteTime");

                    b.Property<string>("F_DeleteUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_DepartmentId")
                        .HasMaxLength(500);

                    b.Property<string>("F_Description")
                        .HasMaxLength(500);

                    b.Property<string>("F_DutyId")
                        .HasMaxLength(500);

                    b.Property<string>("F_Email")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_EnabledMark");

                    b.Property<bool?>("F_Gender");

                    b.Property<string>("F_HeadIcon")
                        .HasMaxLength(50);

                    b.Property<bool>("F_IsActive");

                    b.Property<bool?>("F_IsAdministrator");

                    b.Property<DateTimeOffset?>("F_LastLoggedIn");

                    b.Property<DateTime?>("F_LastModifyTime");

                    b.Property<string>("F_LastModifyUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_ManagerId")
                        .HasMaxLength(50);

                    b.Property<string>("F_MobilePhone")
                        .HasMaxLength(20);

                    b.Property<string>("F_NickName")
                        .HasMaxLength(50);

                    b.Property<string>("F_OrganizeId")
                        .HasMaxLength(50);

                    b.Property<string>("F_Password")
                        .HasMaxLength(500);

                    b.Property<string>("F_RealName")
                        .HasMaxLength(50);

                    b.Property<string>("F_RoleId")
                        .HasMaxLength(500);

                    b.Property<int?>("F_SecurityLevel");

                    b.Property<string>("F_SerialNumber");

                    b.Property<string>("F_Signature")
                        .HasMaxLength(500);

                    b.Property<int?>("F_SortCode");

                    b.Property<string>("F_WeChat")
                        .HasMaxLength(50);

                    b.HasKey("F_Id");

                    b.ToTable("Sys_UserEntities");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.SystemManage.UserLogOnEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("F_AllowEndTime");

                    b.Property<DateTime?>("F_AllowStartTime");

                    b.Property<string>("F_AnswerQuestion")
                        .HasMaxLength(500);

                    b.Property<DateTime?>("F_ChangePasswordDate");

                    b.Property<bool?>("F_CheckIPAddress");

                    b.Property<DateTime?>("F_FirstVisitTime");

                    b.Property<string>("F_Language")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("F_LastVisitTime");

                    b.Property<DateTime?>("F_LockEndDate");

                    b.Property<DateTime?>("F_LockStartDate");

                    b.Property<int?>("F_LogOnCount");

                    b.Property<bool?>("F_MultiUserLogin");

                    b.Property<DateTime?>("F_PreviousVisitTime");

                    b.Property<string>("F_Question")
                        .HasMaxLength(50);

                    b.Property<string>("F_Theme")
                        .HasMaxLength(50);

                    b.Property<string>("F_UserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_UserOnLine");

                    b.Property<string>("F_UserPassword")
                        .HasMaxLength(50);

                    b.Property<string>("F_UserSecretkey")
                        .HasMaxLength(50);

                    b.HasKey("F_Id");

                    b.ToTable("Sys_UserLogOn");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.SystemManage.UserTokenEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<DateTimeOffset>("F_AccessTokenExpiresDateTime");

                    b.Property<string>("F_AccessTokenHash");

                    b.Property<DateTimeOffset>("F_RefreshTokenExpiresDateTime");

                    b.Property<string>("F_RefreshTokenIdHash");

                    b.Property<string>("F_RefreshTokenIdHashSource");

                    b.Property<string>("F_UserId")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("F_Id");

                    b.HasIndex("F_UserId");

                    b.ToTable("Sys_UserToken");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.SystemSecurity.DbBackupEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("F_BackupTime");

                    b.Property<string>("F_BackupType")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_DbName")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_DeleteMark");

                    b.Property<DateTime?>("F_DeleteTime");

                    b.Property<string>("F_DeleteUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_Description")
                        .HasMaxLength(500);

                    b.Property<bool?>("F_EnabledMark");

                    b.Property<string>("F_FileName")
                        .HasMaxLength(50);

                    b.Property<string>("F_FilePath")
                        .HasMaxLength(500);

                    b.Property<string>("F_FileSize")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("F_LastModifyTime");

                    b.Property<string>("F_LastModifyUserId")
                        .HasMaxLength(50);

                    b.Property<int?>("F_SortCode");

                    b.HasKey("F_Id");

                    b.ToTable("Sys_DbBackup");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.SystemSecurity.FilterIPEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_DeleteMark");

                    b.Property<DateTime?>("F_DeleteTime");

                    b.Property<string>("F_DeleteUserId")
                        .HasMaxLength(50);

                    b.Property<string>("F_Description")
                        .HasMaxLength(500);

                    b.Property<bool?>("F_EnabledMark");

                    b.Property<string>("F_EndIP")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("F_LastModifyTime");

                    b.Property<string>("F_LastModifyUserId")
                        .HasMaxLength(50);

                    b.Property<int?>("F_SortCode");

                    b.Property<string>("F_StartIP")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_Type");

                    b.HasKey("F_Id");

                    b.ToTable("Sys_FilterIP");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.SystemSecurity.LogEntity", b =>
                {
                    b.Property<string>("F_Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<string>("F_Account")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("F_CreatorTime");

                    b.Property<string>("F_CreatorUserId")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("F_Date");

                    b.Property<string>("F_Description")
                        .HasMaxLength(50);

                    b.Property<string>("F_IPAddress")
                        .HasMaxLength(50);

                    b.Property<string>("F_IPAddressName")
                        .HasMaxLength(50);

                    b.Property<string>("F_ModuleId")
                        .HasMaxLength(50);

                    b.Property<string>("F_ModuleName")
                        .HasMaxLength(50);

                    b.Property<string>("F_NickName")
                        .HasMaxLength(50);

                    b.Property<bool?>("F_Result");

                    b.Property<string>("F_Type")
                        .HasMaxLength(50);

                    b.HasKey("F_Id");

                    b.ToTable("Sys_Log");
                });

            modelBuilder.Entity("Dmt.DM.Domain.Entity.SystemManage.UserTokenEntity", b =>
                {
                    b.HasOne("Dmt.DM.Domain.Entity.SystemManage.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("F_UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
